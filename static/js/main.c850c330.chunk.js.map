{"version":3,"sources":["assets/game images/GuessemLogo_NoBorder.png","assets/fonts/ProductSans/Product Sans Regular.ttf","assets/game images/Aliens_Start.svg","assets/game images/Aliens_Round1.svg","assets/game images/Aliens_Round2.svg","assets/game images/Aliens_Round3.svg","assets/game images/Aliens_Round4.svg","assets/game images/Aliens_Round5.svg","assets/game images/Aliens_Round6.svg","assets/game images/Aliens_Round7.svg","assets/game images/Aliens_Round8.svg","assets/audio sync /^/.*/.mp3$","assets/audio/abstain from.mp3","assets/audio/be drained.mp3","assets/audio/be endowed with.mp3","assets/audio/be flooded with.mp3","assets/audio/be obsessed with.mp3","assets/audio/be opposed to.mp3","assets/audio/be stuck with.mp3","assets/audio/centralize.mp3","assets/audio/criticize.mp3","assets/audio/deviate from.mp3","assets/audio/enforce.mp3","assets/audio/ensure.mp3","assets/audio/entitle.mp3","assets/audio/entrust.mp3","assets/audio/fill in for.mp3","assets/audio/get through.mp3","assets/audio/immunize.mp3","assets/audio/minimize.mp3","assets/audio/mobilize.mp3","assets/audio/settle for.mp3","assets/audio/sift through.mp3","assets/audio/vandalize.mp3","assets/fonts/Primitive.ttf","assets/logos/logoMB.svg","firebase/firebase.js","components/Header/Header.js","components/Header/SidebarData.js","components/Header/MobileHeader.js","components/Home/Blog/Blog.js","components/Home/Home.js","components/Homework/HomeworkItem/HomeworkItem.js","components/Homework/Homework.js","components/Games/GameLibrary.js","components/FlashcardLibrary/SetCard.js","components/FlashcardLibrary/FlashcardLibrary.js","components/FlashcardLibrary/FlashcardStudySection/NoFlashcards.js","components/BookReports/BookReports.js","components/Login/Login.js","components/TeacherLogin/TeacherLogin.js","components/Teacher/TeacherTest/TeacherTest.js","components/Teacher/TeacherBookReports/TeacherBookReports.js","components/Teacher/TeacherHomework/CreateHomeworkEntryForm.js","components/Teacher/TeacherHomework/TeacherHomework.js","components/Teacher/TeacherFlashcards/TeacherFlashcards.js","components/Teacher/Teacher.js","components/Notebook/RefIntro.js","components/Notebook/DBArray.js","components/Notebook/DynamicToggles.js","components/Notebook/TimeStamp.js","components/Notebook/DivButtonTest.js","components/Notebook/MediaQueries.js","components/Notebook/Notebook.js","components/Loader/Loader.js","components/FlashcardLibrary/FlashcardStudySection/Flashcard/FlashcardConfetti.js","components/Games/LetterBox/LetterBox.js","components/FlashcardLibrary/FlashcardStudySection/Flashcard/Flashcard.js","components/FlashcardLibrary/FlashcardStudySection/FlashcardStudySection.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./abstain from.mp3","./be drained.mp3","./be endowed with.mp3","./be flooded with.mp3","./be obsessed with.mp3","./be opposed to.mp3","./be stuck with.mp3","./centralize.mp3","./criticize.mp3","./deviate from.mp3","./enforce.mp3","./ensure.mp3","./entitle.mp3","./entrust.mp3","./fill in for.mp3","./get through.mp3","./immunize.mp3","./minimize.mp3","./mobilize.mp3","./settle for.mp3","./sift through.mp3","./vandalize.mp3","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","_rect","_path","_g","_g2","_path2","_path3","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","getAuth","_extends","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","logoMB_SvgComponent","props","react_default","a","createElement","width","height","version","viewBox","stroke","classname","x","y","fillOpacity","strokeLinejoin","strokeWidth","transform","d","fill","strokeMiterlimit","style","paintOrder","Header","auth","_useState","useState","_useState2","slicedToArray","loggedIn","setLoggedIn","useEffect","onAuthStateChanged","user","_useState3","_useState4","matsuStayOn","setMatsuStayOn","_useState5","_useState6","motoStayOn","setMotoStayOn","className","react_media","query","onClick","react_router_dom","to","signOut","then","console","log","catch","error","SidebarData","name","path","icon","ai_index_esm","cName","tfi_index_esm","lu_index_esm","pi_index_esm","bs_index_esm","MobileHeader","isVisible","setIsVisible","toggleIsVisible","Divide","color","size","duration","distance","toggled","toggle","item","idx","marginRight","Fragment","ri_index_esm","Blog","Home","dangerouslySetInnerHTML","__html","Home_Blog_Blog","HomeworkItem","homeworkData","data","hwDataKeys","isMobile","useMediaQuery","isLandscape","Accordion","Item","eventKey","str","year","slice","month","day","parseInt","convertDate","title","Body","hwKey","type","Description","_regeneratorRuntime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","unwrapped","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Homework","isLoading","setIsLoading","hasBeenFetched","setHasBeenFetched","dbDates","setDbDates","_useState7","_useState8","dbEntries","setDbEntries","_useState9","_useState10","uniqueDates","setUniqueDates","_useState11","_useState12","renderYearlyDates","setRenderYearlyDates","_useState13","_useState14","renderYearlyEntries","setRenderYearlyEntries","_useState15","_useState16","openCollapse","setOpenCollapse","_useState17","_useState18","carouselSelection","setCarouselSelection","db","getDatabase","unique","dates","entries","_ref","asyncToGenerator","_callee","dbRef","_context","ref","get","child","snapshot","exists","queryData","val","concat","toConsumableArray","Set","defaultYear","allDates","allEntries","tempDates","tempEntries","tempOpenCollapses","setTimeout","fetchData","isPortrait","mobileCarouselItemStyle","normalCarouselItemStyle","carouselDivStyle","display","flexDirection","justifyContent","alignItems","marginBottom","Carousel","variant","indicators","interval","onSelect","yearRelevantDates","yearRelevantEntries","onSlide","onSlid","margin","maxWidth","date","transition","opacity","pointerEvents","Homework_HomeworkItem_HomeworkItem","GameLibrary","navigate","useNavigate","handleClick","game","Card","border","Img","src","GuessemLogo","backgroundColor","borderBottom","fontSize","SetCard","setPK","PK","setName","SetName","setAuthor","SetAuthor","setCards","SetCards","setCompletions","SetCompletions","FlashcardLibrary_regeneratorRuntime","FlashcardLibrary","dbSets","setDbSets","stateData","setStateData","noData","setNoData","location","useLocation","flashcardSets","set","components_FlashcardLibrary_SetCard","NoFlashcards","BookReports","refTextInput","useRef","textFill","setTextFill","selectedIdx","setSelectedIdx","selectedBook","setSelectedBook","selectedSection","setSelectedSection","showLoadAlert","setShowLoadAlert","headerLoadAlert","setHeaderLoadAlert","textLoadAlert","setTextLoadAlert","showSubmitAlert","setShowSubmitAlert","headerSubmitAlert","setHeaderSubmitAlert","_useState19","_useState20","textSubmitAlert","setTextSubmitAlert","_useState21","_useState22","showSaveAlert","setShowSaveAlert","_useState23","_useState24","headerSaveAlert","setHeaderSaveAlert","_useState25","_useState26","textSaveAlert","setTextSaveAlert","toggleShowLoadAlert","toggleShowSaveAlert","toggleShowSubmitAlert","DropdownButton","updateSelectedBook","bookData","Books","book","Dropdown","updateSelectedSection","Sections","section","idx2","placeholder","defaultValue","Button","event","preventDefault","refSection","onValue","Modal","centered","show","onHide","Title","data-bs-dismiss","aria-label","Footer","currentTextSave","current","currentTextSubmit","Login","emailRef","passwordRef","Form","onSubmit","signInWithEmailAndPassword","userCredential","uid","replace","errorCode","errorMessage","message","Group","Label","Control","required","TeacherLogin","components_Login_Login","TeacherTest","toggleModal","setToggleModal","nGlobal","setnGlobal","modalOff","n","handleButtonClick","TeacherBookReports_regeneratorRuntime","TeacherBookReports","DataSection","setDataSection","DataReport","setDataReport","report","setReport","showNoReport","setShowNoReport","modalBook","setModalBook","modalSection","setModalSection","updateDataSection","updateDataReport","keysBooks","iBook","iSections","keysSections","j","jSection","jBookReportData","toggleShowNoReport","gi_index_esm","includes","dataIdx","indexOf","r","CreateHomeworkEntryForm","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedDay","setSelectedDay","prepDay","setPrepDay","xFields","setxFields","homeworkItem","setHomeworkItem","descriptionItem","setDescriptionItem","toggleDesc","setToggleDesc","monthList","padZero","toString","marginTop","marginLeft","iYear","yearId","iMonth","monthId","DIY","Date","getDate","daysList","generateDays","updateXFields","xID","xIdx","InputGroup","FormControl","onChange","updateHomeworkItem","handleHomeworkItemInput","updateToggle","toggleDescription","as","rows","updateDescriptionItem","handleDescriptionInput","submissionField","TeacherHomework","Tabs","defaultActiveKey","Tab","Teacher_TeacherHomework_CreateHomeworkEntryForm","TeacherFlashcards_regeneratorRuntime","TeacherFlashcards","database","currentDate","numDbCards","setNumDbCards","CSVfile","setCSVFile","dataArray","setDataArray","isSelected","setIsSelected","isImported","setIsImported","isUploaded","setIsUploaded","inputSetName","setInputSetName","inputSetAuthor","setInputSetAuthor","showModal","setShowModal","numPreexistingCards","fileReader","FileReader","handleOnSubmit","onload","text","string","csvHeader","split","csvRows","array","reduce","header","index","join","csvFileToArray","readAsText","headerKeys","handleModalClose","handleModalOpen","handleNameText","handleAuthorText","flashcardSetNumberHelper","padStart","textAlign","accept","files","backdrop","keyboard","controlId","disabled","Text","newSetNum","newSetCards","objectSpread","Front","Back","WordType","Example","creation","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","newDataToUpload","idx1","idx3","Teacher","userEmail","setUserEmail","userStatus","setUserStatus","updateUserEmail","email","Teacher_TeacherHomework_TeacherHomework","Teacher_TeacherFlashcards_TeacherFlashcards","Teacher_TeacherBookReports_TeacherBookReports","Teacher_TeacherTest_TeacherTest","RefIntro","divRef","inputRef","buttonRef","DBArray_regeneratorRuntime","DBArray","displayArray","setDisplayArray","A","B","C","D","E","arrayInputs","setArrayInputs","visualizeInputArray","ia","handleInput","anyInput","updateArrayInputs","inputBoxStyle","da","displayText","visualizeDisplayArray","maxlength","updateDisplayArray","k","v","DynamicToggles","booleanListA","setBooleanListA","booleanListB","setBooleanListB","val1","val2","booleanObj","setBooleanObj","nComponents","setNComponents","numComponents","updateComponents","updateBooleanListA","addComponent","bi_index_esm","addSubComponentA","updateBooleanListB","addSubComponentB","updateBooleanObj","addSubComponentC","addSubComponentD","TimeStamp","toDateString","DivButtonTest","stopPropagation","MediaQueries","isDesktopOrLaptop","isBigScreen","isTabletOrMobile","isRetina","Notebook","components_Notebook_MediaQueries","components_Notebook_RefIntro","components_Notebook_DBArray","components_Notebook_DynamicToggles","components_Notebook_TimeStamp","components_Notebook_DivButtonTest","Loader","canvasStyles","position","top","left","Realistic","refAnimationInstance","getInstance","useCallback","instance","makeShot","particleRatio","opts","origin","particleCount","Math","floor","fire","spread","startVelocity","decay","scalar","dist_default","refConfetti","LetterBox","roundNum","setRoundNum","wordList","isAudio","guessInput","setGuessInput","guessedLetters","setGuessedLetters","inctLetters","setInctLetters","messageState","setMessageState","winState","setWinState","modalInput","setModalInput","modalFocus","setModalFocus","modalIsLoading","setModalIsLoading","document","getElementById","focus","tempWordObj","1","wordType","japanese","english","exampleSentence","2","3","4","5","6","7","8","9","10","imgNameObj","Round1","imgRound1","Round2","imgRound2","Round3","imgRound3","Round4","imgRound4","Round5","imgRound5","Round6","imgRound6","Round7","imgRound7","Round8","imgRound8","alertObject","inct","msg","repeat","crct","win","answerLetterBoxStyle","spaceBoxStyle","modalInputStyle","padding","zeroPad","formatDate","hours","minutes","seconds","submitGuess","keyWord","gL","updateGuessedLetters","toLowerCase","Array","from","filter","letter","updateInctLetters","tempHandleModalChange","updateModalInput","pressedKey","toUpperCase","tempHandleModalKeypress","updateModalFocus","tempHandleModalClick","select","Alert","imgStart","alt","rx_index_esm","tabIndex","onKeyDown","autoFocus","maxLength","components_Loader_Loader","fontFamily","word","onKeyUp","refDB","Flashcard","setData","cards","completions","signatureModal","setSignatureModal","signature","setSignature","modalWarning","setModalWarning","audioFile","setAudioFile","setIsAudio","toggles","setToggles","currentIdx","setCurrentIdx","isRemoved","setIsRemoved","hasBeenFlipped","setHasBeenFlipped","crctCardCount","setCrctCardCount","inctCardCount","setInctCardCount","cardsArray","isReversedArray","counter","toggleState","tState","createRef","isFlipped","currentWord","currentFile","require","totalCards","percentComplete","handleFlip","newToggles","handleInct","updateIsRemoved","updateCurrentIdx","handleCrct","cardStyle","zIndex","handleSignatureModalOpen","borderRadius","ceil","card","right","index_cjs_default","flipOnHover","flipOnClick","flipDirection","index_cjs","playPromise","Audio","play","playAudio","handleNoAudio","s","closeButton","newCompletions","FlashcardStudySection","isData","setIsData","setSetName","setSetData","setSetPK","setSetCompletions","FlashcardStudySection_Flashcard_Flashcard","App","components_Header_MobileHeader","components_Header_Header","react_router","element","components_Home_Home","components_Homework_Homework","components_Games_GameLibrary","components_FlashcardLibrary_FlashcardLibrary","FlashcardLibrary_FlashcardStudySection_FlashcardStudySection","FlashcardStudySection_NoFlashcards","components_BookReports_BookReports","components_Teacher_Teacher","components_TeacherLogin_TeacherLogin","components_Notebook_Notebook","Games_LetterBox_LetterBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c850c330.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GuessemLogo_NoBorder.dc43f1ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Product Sans Regular.eae9c18c.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Start.8d97e036.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round1.ce31cfee.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round2.277db6ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round3.89db01f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round4.da0c78bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round5.0a135767.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round6.e09206e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round7.c48877b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aliens_Round8.4f58f89f.svg\";","var map = {\n\t\"./abstain from.mp3\": 225,\n\t\"./be drained.mp3\": 226,\n\t\"./be endowed with.mp3\": 227,\n\t\"./be flooded with.mp3\": 228,\n\t\"./be obsessed with.mp3\": 229,\n\t\"./be opposed to.mp3\": 230,\n\t\"./be stuck with.mp3\": 231,\n\t\"./centralize.mp3\": 232,\n\t\"./criticize.mp3\": 233,\n\t\"./deviate from.mp3\": 234,\n\t\"./enforce.mp3\": 235,\n\t\"./ensure.mp3\": 236,\n\t\"./entitle.mp3\": 237,\n\t\"./entrust.mp3\": 238,\n\t\"./fill in for.mp3\": 239,\n\t\"./get through.mp3\": 240,\n\t\"./immunize.mp3\": 241,\n\t\"./minimize.mp3\": 242,\n\t\"./mobilize.mp3\": 243,\n\t\"./settle for.mp3\": 244,\n\t\"./sift through.mp3\": 245,\n\t\"./vandalize.mp3\": 246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 224;","module.exports = __webpack_public_path__ + \"static/media/abstain from.5a5a58c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be drained.f6cd3cf2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be endowed with.959a3cfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be flooded with.74ffd28b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be obsessed with.f31b2644.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be opposed to.d50bba2b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/be stuck with.5e45b0fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/centralize.209c59c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/criticize.39420c90.mp3\";","module.exports = __webpack_public_path__ + \"static/media/deviate from.4426449e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/enforce.2a5b5524.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ensure.8b71497c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/entitle.1647acec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/entrust.27c9c1e8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fill in for.d352d648.mp3\";","module.exports = __webpack_public_path__ + \"static/media/get through.bb32e286.mp3\";","module.exports = __webpack_public_path__ + \"static/media/immunize.a3e94e1d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/minimize.ddedbbf2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/mobilize.7f5be16b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/settle for.e9b1bb3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sift through.e1b0362a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/vandalize.1b7f655f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Primitive.46235c36.ttf\";","var _rect, _path, _g, _g2, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"250mm\",\n    height: \"250mm\",\n    version: 1.1,\n    viewBox: \"0 0 250 250\"\n  }, props), /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"#000\"\n  }, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    classname: \"Lines\",\n    x: 25.867,\n    y: 25.867,\n    width: 198.27,\n    height: 198.27,\n    fillOpacity: 0,\n    strokeLinejoin: \"bevel\",\n    strokeWidth: 1.75\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    transform: \"matrix(.19 0 0 .24828 69.907 47.306)\",\n    d: \"m292.83 611.5-260.01-146.8-2.8709-298.57 257.14-151.77 260.01 146.8 2.8709 298.57z\",\n    fillOpacity: 0,\n    strokeLinejoin: \"bevel\",\n    strokeWidth: 8.8157\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\"\n  }, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    strokeWidth: 1.75\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m25.867 25.867 98.587 25.002 99.678-25.002-50.276 61.45 49.843 74.13-98.154 37.682-99.719-36.448 49.772-74.13-49.73-62.685\",\n    strokeLinejoin: \"bevel\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m76.143 162.68-50.276 61.45 99.678-25.002 98.587 25.002s-49.73-62.685-49.73-62.685l48.918-74.13-98.865-36.448-98.673 37.682 50.362 74.13\",\n    strokeLinejoin: \"bevel\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m25.867 25.867 50.276 136.82 49.402 60.637 48.857-61.872 49.73-135.58\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    strokeLinejoin: \"bevel\",\n    strokeWidth: 1.75\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m224.13 224.13-50.276-136.82-49.402-61.491-48.857 62.726-49.73 135.58\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m25.781 88.552 49.817-62.771 48.857 25.088 49.402-25.088 49.463 61.536\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m75.598 25.781-49.772 136.9 99.719 60.637 98.154-61.872-49.843-135.67\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m174.4 223.98 48.918-136.66-98.865-61.491-98.673 62.726 50.362 135.96\"\n  }))), /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m76.143 223.52 49.402-24.393 48.857 23.877\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 0,\n    strokeWidth: 1.7156,\n    style: {\n      \"paintOrder\": \"normal\"\n    }\n  }), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m25.826 162.68 50.317 60.841\",\n    strokeWidth: 1.75\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    classname: \"Lines\",\n    d: \"m223.7 161.45-49.297 62.528\",\n    strokeWidth: 1.75\n  })))));\n};\nexport default __webpack_public_path__ + \"static/media/logoMB.d605a75e.svg\";\nexport { SvgComponent as ReactComponent };","import { initializeApp } from 'firebase/app';\r\n// import database from 'firebase/database';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCfDRoOUjBhtcTwdLXCCsWu7T7Obahvly8\",\r\n    authDomain: \"homework-d221e.firebaseapp.com\",\r\n    projectId: \"homework-d221e\",\r\n    storageBucket: \"homework-d221e.appspot.com\",\r\n    messagingSenderId: \"508578415933\",\r\n    appId: \"1:508578415933:web:99eb1232d4ac3f0de4f154\",\r\n    measurementId: \"G-3QMBL9Y1NX\",\r\n    databaseURL: \"https://homework-d221e-default-rtdb.asia-southeast1.firebasedatabase.app\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport default app;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport Media from 'react-media';\r\n\r\nimport {ReactComponent as MyLogo} from '../../assets/logos/logoMB.svg';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n    const auth = getAuth();\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n              // User is signed in, see docs for a list of available properties\r\n              // https://firebase.google.com/docs/reference/js/firebase.User\r\n            //   const uid = user.uid;\r\n            //   const updateUserEmail = user.email\r\n            //   console.log(user)\r\n              setLoggedIn(true)\r\n            } else {\r\n              // User is signed out\r\n              // ...\r\n              setLoggedIn(false)\r\n            }\r\n          });\r\n    }, [loggedIn, auth])\r\n\r\n  \r\n\r\n    // const [matsuOn, setMatsuOn] = useState(false);\r\n    const [matsuStayOn, setMatsuStayOn] = useState(false);\r\n    // const [motoOn, setMotoOn] = useState(false);\r\n    const [motoStayOn, setMotoStayOn] = useState(false);\r\n\r\n    // const handleMatsuMouseEnter = () => {\r\n    //     setMatsuOn(true);\r\n    // };\r\n    // const handleMotoMouseEnter = () => {\r\n    //     setMotoOn(true);\r\n    // };\r\n    // const handleMatsuMouseLeave = () => {\r\n    //     setMatsuOn(false);\r\n    //     setMatsuClickCount(0);\r\n    // };\r\n    // const handleMotoMouseLeave = () => {\r\n    //     setMotoOn(false);\r\n    //     setMotoClickCount(0);\r\n    // };\r\n    const handleMatsuClick = () => {\r\n        let updateMatsuStayOn = !matsuStayOn;\r\n        setMatsuStayOn(updateMatsuStayOn);\r\n    };\r\n    const handleMotoClick = () => {\r\n        let updateMotoStayOn = !motoStayOn;\r\n        setMotoStayOn(updateMotoStayOn);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        signOut(auth).then(() => {\r\n            console.log(\"Signed Out!\")\r\n          }).catch((error) => {\r\n            console.log(\"Error!\")\r\n          });\r\n    };\r\n\r\n    return(\r\n        <div className=\"HeaderContainer\">\r\n            <Media query=\"(min-width: 768px)\">\r\n                <div className=\"Logo\" onClick={handleMatsuClick}>\r\n                    <div className=\"LogoText\">\r\n                        <span className={matsuStayOn ? \"LogoMatsuOn\" : \"LogoMatsu\"}>松</span>\r\n                    </div>\r\n                    {/* <MyLogo \r\n                        className=\"LogoImg\" \r\n                        height='15vh'\r\n                        width='100%' \r\n                    /> */}\r\n                </div>\r\n            </Media>\r\n            <div className=\"HeaderLinks\">\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/Home\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/HW\">Homework</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/GameLibrary\">Games</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/FlashcardLibrary\">Flashcards</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/BookReports\">Book Reports</Link>\r\n                        </li>\r\n                        <li>\r\n                        {loggedIn ? <Link to=\"/Teacher\">Teacher Home</Link> :  <Link to=\"/TeacherLogin\">Teacher Login</Link>}\r\n                        </li>\r\n                        {loggedIn ? <li><Link to=\"/Home\" onClick={handleLogout}>Logout</Link></li> : null }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <Media query=\"(min-width: 768px)\">\r\n                <div className=\"Logo\" onClick={handleMotoClick} >\r\n                    <div className=\"LogoText\">\r\n                        <span className={motoStayOn ? \"LogoMotoOn\" : \"LogoMoto\"}>本</span>\r\n                    </div>\r\n                    <MyLogo \r\n                        className=\"LogoImg\" \r\n                        height='15vh'\r\n                        width='100%' \r\n                    />\r\n                </div>\r\n            </Media>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { AiOutlineHome } from 'react-icons/ai'\r\nimport { TfiWrite } from 'react-icons/tfi';\r\nimport { LuGamepad } from 'react-icons/lu';\r\nimport { PiCards } from 'react-icons/pi';\r\nimport { BsBook } from 'react-icons/bs';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        name: 'Home',\r\n        path: '/',\r\n        icon: <AiOutlineHome />, \r\n        cName: 'MobileLinkText'\r\n    },\r\n    {\r\n        name: 'Homework',\r\n        path: '/HW',\r\n        icon: <TfiWrite />, \r\n        cName: 'MobileLinkText'\r\n    },\r\n    {\r\n        name: 'Games',\r\n        path: '/GameLibrary',\r\n        icon: <LuGamepad />, \r\n        cName: 'MobileLinkText'\r\n    },\r\n    {\r\n        name: 'Flashcards',\r\n        path: '/FlashcardLibrary',\r\n        icon: <PiCards />, \r\n        cName: 'MobileLinkText'\r\n    },\r\n    {\r\n        name: 'Book Reports',\r\n        path: '/BookReports',\r\n        icon: <BsBook />, \r\n        cName: 'MobileLinkText'\r\n    },\r\n];","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divide as Hamburger } from 'hamburger-react';\r\nimport { RiLogoutCircleLine, RiLoginCircleLine } from 'react-icons/ri';\r\nimport { PiChalkboardTeacher } from 'react-icons/pi';\r\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\nimport { SidebarData } from './SidebarData';\r\n\r\nimport './MobileHeader.css';\r\n\r\nconst MobileHeader = () => {\r\n\r\n    const auth = getAuth();\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n              // User is signed in, see docs for a list of available properties\r\n              // https://firebase.google.com/docs/reference/js/firebase.User\r\n            //   const uid = user.uid;\r\n            //   const updateUserEmail = user.email\r\n            //   console.log(user)\r\n              setLoggedIn(true)\r\n            } else {\r\n              // User is signed out\r\n              // ...\r\n              setLoggedIn(false)\r\n            }\r\n          });\r\n    }, [loggedIn, auth])\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const toggleIsVisible = () => {\r\n        let updateIsVisible = !isVisible;\r\n        setIsVisible(updateIsVisible);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        signOut(auth).then(() => {\r\n            console.log(\"Signed Out!\")\r\n          }).catch((error) => {\r\n            console.log(\"Error!\")\r\n          });\r\n    };\r\n\r\n    return(\r\n        <div className=\"MobileHeaderContainer\">\r\n            <div className=\"MobileHamburgerContainer\">\r\n                <Hamburger color=\"white\" size={33} duration={1.25} distance=\"md\" toggled={isVisible} toggle={toggleIsVisible} />\r\n            </div>\r\n            <div className={isVisible ? \"MobileHeaderLinks active\": \"MobileHeaderLinks\"}>\r\n                <nav>\r\n                    <ul onClick={toggleIsVisible}>\r\n                        {SidebarData.map((item, idx) => (\r\n                            <li key={idx} className={item.cName}>\r\n                                <Link to={item.path}>\r\n                                    <span style={{ marginRight: \"9px\" }}>{item.icon}</span>\r\n                                    <span>{item.name}</span>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                        \r\n                        <li className=\"MobileLinkText\">\r\n                        {loggedIn ? <>\r\n                                        <Link to=\"/Teacher\">\r\n                                            <span style={{ marginRight: \"9px\" }}><PiChalkboardTeacher /></span>\r\n                                            <span>Teacher Home</span>\r\n                                        </Link> \r\n                                    </>\r\n                                    :   \r\n                                    <>\r\n                                        <Link to=\"/TeacherLogin\">\r\n                                            <span style={{ marginRight: \"9px\" }}><RiLoginCircleLine /></span>\r\n                                            <span>Teacher Login</span>\r\n                                        </Link>\r\n                                    </>\r\n                        }\r\n                        </li>\r\n                        {loggedIn ? <li className=\"MobileLinkText\">\r\n                                        <Link to=\"/Home\" onClick={handleLogout}>\r\n                                            <span style={{ marginRight: \"9px\" }}><RiLogoutCircleLine /></span>\r\n                                            <span>Logout</span>\r\n                                        </Link>\r\n                                    </li> : null }\r\n\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileHeader;","import React from 'react';\r\n\r\nimport './Blog.css';\r\n\r\nconst Blog = () => {\r\n    return(\r\n        <div className=\"BlogContainer\">\r\n            \r\n            {/* <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-31\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Summary\r\n                    <ul>\r\n                        <li>X</li>\r\n                        <li>Y</li>\r\n                        <li>Z</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr /> */}\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-10-05\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Discovered unvalidated data in Teacher Homework Item Creation, causing errors\r\n                    <ul>\r\n                        <li>Built validation around data</li>\r\n                        <li>Made UI to reflect valid/invalid data</li>\r\n                        <li>Tested validation and submission, then re-deployed</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-10-04\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Blog & Tidied Code\r\n                    <ul>\r\n                        <li>Updated blog entries</li>\r\n                        <li>Updated Homework Item entries</li>\r\n                        <li>Tidied code, including minimizing warning and deleting unused sections</li>\r\n                        <li>Pushed code (will be the most updated while I work on other projects)</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-09-22\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated and Tested Student-Side Homework Display\r\n                    <ul>\r\n                        <li>Set up API to retreive data from Firebase</li>\r\n                        <li>Edited components to match Teacher Homework Creation edits</li>\r\n                        <li>Edited animations, styles, and layouts</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-09-21\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Tested and Edited Teacher Homework Creation Functionality\r\n                    <ul>\r\n                        <li>Created validation and tested input data</li>\r\n                        <li>Edited interface details</li>\r\n                        <li>Built data retreival components</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-09-20\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Restarted Teacher Homework Item Creation Section\r\n                    <ul>\r\n                        <li>Redesigned interface and interface limitations</li>\r\n                        <li>Built interface components</li>\r\n                        <li>Set up API to connect to Firestore</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-30\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Flashcards\r\n                    <ul>\r\n                        <li>Fixed issues with event delegation and flipping</li>\r\n                        <li>Removed ID system of event handling</li>\r\n                        <li>Cleaned code and added comments</li>\r\n                        <li>Recorded, edited, and added new audio</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-29\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Teacher Flashcard Section\r\n                    <ul>\r\n                        <li>Imports from CSV can now handle example sentences with commas</li>\r\n                        <li>Added zero-padding to database naming. Currently 10,000 sets allowed</li>\r\n                        <li>Slightly changed the parsing method for CSVs</li>\r\n                        <li>Flashcard section also doesn't crash when audio isn't found: 'no audio' button replaces 'audio' button</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-25\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Flashcards: New layout\r\n                    <ul>\r\n                        <li>Updated design and layout of flashcards</li>\r\n                        <li>Modified database and JSON fields, eliminating irrelevant data</li>\r\n                        <li>Tweaked audio button, font-size, and flip functionality</li>\r\n                        <li>Debugged audio playback</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-23\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Flashcards: Introducing audio\r\n                    <ul>\r\n                        <li>Added audio functionality to flashcards</li>\r\n                        <li>Modified flashcard layout</li>\r\n                        <li>Updated audio library</li>\r\n                        <li>Deployed new functionality for student use</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-18\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Began recording audio for new functionality\r\n                    <ul>\r\n                        <li>Purchased condenser microphone for recording</li>\r\n                        <li>Tested recording conditions</li>\r\n                        <li>Began editing and converting audio files for internet use in Audacity</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2023-05-11\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Audio research for new functionality\r\n                    <ul>\r\n                        <li>Researched relevant topics for size/quality tradeoff</li>\r\n                        <li>Relevant topics included: bitrate, biterate mode, sampling rate, channeling, tagging, etc.</li>\r\n                        <li>Testing personal audio data against Google</li>\r\n                        <li>Studied Audacity functionality</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-12-16\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Reviewing and Re-evaluating Roadmap + Research\r\n                    <ul>\r\n                        <li>Readjusted goals for Step 2 (and future steps)</li>\r\n                        <li>Returned to literature on the following topics: </li>\r\n                            <ul>\r\n                                <li>Spaced repititon and pre-existing algorithms</li>\r\n                                    <ul>\r\n                                        <li>Pimsleur Method</li>\r\n                                        <li>Lietner System</li>\r\n                                        <li>Anki / SM-2</li>\r\n                                        <li>Super Memo (and iterations of SM algorithm)</li>\r\n                                        <li>Half-life Regression</li>\r\n                                    </ul>\r\n                                <li>Forgetting curves</li>\r\n                                <li>New Theory of Disuse</li>\r\n                                <li>Lag effect</li>\r\n                            </ul>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-12-12\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Completed Step 1 in Flashcard Roadmap\r\n                    <ul>\r\n                        <li>All functionality completed for \"stupid\" version of flashcards</li>\r\n                        <li>Tried test cases for Flashcard functionality</li>\r\n                        <li>Uploaded full set of flashcard data for student use</li>\r\n                        <li>Deployed flashcard functionality and started student use</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-12-01~12\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Developed new 'Flashcard' section\r\n                    <ul>\r\n                        <li>Decided on and wrote paths to new section</li>\r\n                        <li>Experimented with layouts and designs</li>\r\n                        <li>Implemented basic flashcard functionality</li>\r\n                            <ul>\r\n                                <li>Flashcard with flip animation</li>\r\n                                <li>Library for flashcard sets</li>\r\n                                <li>Bulk CSV uploader</li>\r\n                            </ul>\r\n                        <li>Focused on using CSS with pre-existing package for animation and styling</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-11-20~30\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Restructured database for upcoming functionality\r\n                    <ul>\r\n                        <li>Decided the detail and structure necessary for flashcards</li>\r\n                        <li>Implemented functions to read and write data to new section of Firebase</li>\r\n                        <li>Tested APIs to get data from and write data to database.</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-09-07\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Tinkered with Icons\r\n                    <ul>\r\n                        <li>Set custom favicons</li>\r\n                        <li>Changed and debugged favicon links</li>\r\n                        <li>Troubleshoot small errors with GIT repository</li>\r\n                        <li>Changed Router and default root path</li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-09-06\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Updated Software\r\n                    <ul>\r\n                        <li>Updated to React 18, npm 8, react-router-dom 6</li>\r\n                        <li>Modified code (Switch -> Routes, useHistory -> useNavigate, etc.) to be react-router-dom friendly</li>\r\n                        <li>Troubleshoot small errors arising from updates</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-08-23\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Reviewed and edited Github Pages settings and files\r\n                    <ul>\r\n                        <li>Edited CNAME files</li>\r\n                        <li>Linked to subdomain</li>\r\n                        <li>Unlinked from subdomain</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-04-16\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Created \"Create Entry\" sub-section under Teacher Homework section\r\n                    <ul>\r\n                        <li>Worked through logic for adding and removing fields</li>\r\n                        <li>Created field components for adding homework at higest level of list</li>\r\n                        <li>Worked on adding field components at lower list levels</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            \r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-04-12\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Tweaked small details and tried multiple representations for Homework section\r\n                    <ul>\r\n                        <li>Added fixed async logic to Homework while retrieving data from Firebase</li>\r\n                        <li>Set up models to represent bulleted list data and subdata</li>\r\n                        <li>Adjusted layout to Teacher Console</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-04-11\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Created new components for Student-end Homework section and Teacher-end Homework section\r\n                    <ul>\r\n                        <li>Added Accordions</li>\r\n                        <li>Retrieved data from Firebase to use in Accordions</li>\r\n                        <li>Fixed an async issue with Teacher-end Book Reports </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2022-04-07\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Added homework structure to Firebase in anticipation of new homework tracking section \r\n                    <ul>\r\n                        <li>Designed data structure</li>\r\n                        <li>Added structure to Firebase</li>\r\n                        <li>Added components to Homework section on Student-end</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-12-13\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Re-structured Teacher Book Report page\r\n                    <ul>\r\n                        <li>API calls moved</li>\r\n                        <li>Structure of Teacher Console rearranged</li>\r\n                        <li>Order of functions to call Book Reports changed</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-12-08\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Debugged issues with report submissions\r\n                    <ul>\r\n                        <li>Updated Firebase structure</li>\r\n                        <li>Tested functionality</li>\r\n                        <li>Minor spacing formatting</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-20\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Continued changes from 10-15\r\n                    <ul>\r\n                        <li>Button functionality completed</li>\r\n                        <li>Report text and display functionality completed</li>\r\n                        <li>Made minor style adjustments to Teaching Console</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-15\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Changed layout and functionality of Teacher Console buttons\r\n                    <ul>\r\n                        <li>All books and sections included in button layout</li>\r\n                        <li>Solid button styles sections with data</li>\r\n                        <li>Icons added</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-14\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Started responsive design implementation for iPad and iPhone 7\r\n                    <ul>\r\n                        <li>Included desktop-first responsive design for designated pages</li>\r\n                        <li>Minor layout changes for iPad and iPad Pro</li>\r\n                        <li>Major layout changes for iPhone 7 (and like displays)</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-13\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Testing carried out and layout details modified\r\n                    <ul>\r\n                        <li>Testing flow of data from student report creation to teacher reading</li>\r\n                        <li>Button and text layout in Teacher Book Report Section modified</li>\r\n                        <li>Home page and mini blog content created</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-12\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Teacher Console - Teacher Book Reports section updated\r\n                    <ul>\r\n                        <li>Teacher Console navigation buttons and dynamic components created </li>\r\n                        <li>Teacher Book Reports dynamic buttons layout and functionality for existing texts created</li>\r\n                        <li>Display window created to display data</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    2021-10-11\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Firebase Authentication and sign in features built\r\n                    <ul>\r\n                        <li>Set up user authentication procedure and protocol in Firebase</li>\r\n                        <li>Teacher Login section connected to Firebase. Structure implemented</li>\r\n                        <li>Barebones Teacher Console created</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    <b>2021-10-07</b>\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Basic functionality added\r\n                    <ul>\r\n                        <li>Book Reports section button functionality linked up</li>\r\n                        <li>Firebase Authentication and Realtime Database projects set up</li>\r\n                        <li>Database structure decided and implemented</li>\r\n                        <li>API functions created</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"BlogEntry\">\r\n                <div className=\"BlogDate\">\r\n                    <b>2021-10-06</b>\r\n                </div>\r\n                <div className=\"BlogText\">\r\n                    Project started and basic functionality established\r\n                    <ul>\r\n                        <li>Menu navigation set up</li>\r\n                        <li>Toriaezu logo designed and styled</li>\r\n                        <li>Book Reports section JSON data created and lists using data implemented</li>\r\n                        <li>Book Reports section basic layout created</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport Blog from './Blog/Blog';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div className=\"HomeContainer\">\r\n            <div className=\"SectionTitle\">\r\n                Home\r\n            </div>\r\n            <div className=\"HomeBody\">\r\n                <span>\r\n                    Welcome to a small project I'm working on called Homework<span dangerouslySetInnerHTML={{ \"__html\": \"&trade;\" }} />.\r\n                    Currently, I'm working as a one-man team to develop this site geared toward English lessons between one student and a teacher or team of teachers.\r\n                    Goals of the project include allowing logins for multitudes of students and for teachers, expanding sections beyond book reports and homework logging. \r\n                    Testing, grading, digitalized feedback, reports, and innovative design, teaching, and learning techniques are all ideas I would love see implemented here.\r\n                    Until those goals have been achieved, updates to the website and other developments and fixes will be logged in a mini-blog, below.\r\n                </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"HomeBlog\">\r\n                <div className=\"HomeBlogTitle\">\r\n                    Updates\r\n                </div>\r\n                <Blog />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n\r\nimport './HomeworkItem.css';\r\nimport '../../../assets/fonts/ProductSans/Product Sans Regular.ttf';\r\n\r\nconst HomeworkItem = (props) => {\r\n\r\n    const homeworkData = props.data;\r\n    const hwDataKeys = Object.keys(homeworkData);\r\n\r\n    const isMobile = useMediaQuery({ query: '(max-width: 950px)' });\r\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' });\r\n\r\n    const convertDate = (str) => {\r\n        let titleString = '';\r\n        let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\r\n        let year = str.slice(0,4)\r\n        let month = str.slice(5,7);\r\n        let day = str.slice(8,10)\r\n        \r\n        let textMonth = months[parseInt(month)-1]\r\n        \r\n        titleString = year + ' ' + textMonth + ' ' + day;\r\n        return(titleString)\r\n    }\r\n\r\n    // console.log(Object.keys(homeworkData));\r\n\r\n    const mobileAccordionStyle = {\r\n        width: \"85vw\",\r\n    };\r\n\r\n    const normalAccordionStyle = {\r\n        width: \"55vw\",\r\n    };\r\n\r\n\r\n    return(\r\n        <div className='HwAccordionElement' style={isMobile&&!isLandscape ? mobileAccordionStyle : normalAccordionStyle} >\r\n            <Accordion>\r\n                <Accordion.Item eventKey='1'>\r\n                    <Accordion.Header>\r\n                        <div className=\"HomeworkDate\">\r\n                            {convertDate(props.title)}\r\n                        </div>                    \r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        {/* <div dangerouslySetInnerHTML={{\r\n                            __html: props.data\r\n                        }} /> */}\r\n                        {hwDataKeys.map((hwKey, idx)=>(\r\n                            <div className=\"HomeworkDetails\" key={idx} >\r\n                                {/* <div className=\"\"> */}\r\n                                    <ul className=\"HomeworkItemUL\">\r\n                                        <li className=\"HomeworkItemLI1\">{homeworkData[hwKey].HomeworkItem}</li>\r\n                                        <li className=\"HomeworkItemLI2\" type=\"none\" >{homeworkData[hwKey].Description}</li>\r\n                                    </ul>\r\n                                {/* </div> */}\r\n                            </div>\r\n                        ))\r\n\r\n                        }\r\n\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n            {/* <Card>\r\n                -----\r\n            </Card> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeworkItem;","import React, { useEffect, useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport HomeworkItem from './HomeworkItem/HomeworkItem';\r\n\r\nimport './Homework.css';\r\n\r\nconst Homework = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasBeenFetched, setHasBeenFetched] = useState(false);\r\n\r\n    const [dbDates, setDbDates] = useState([]);\r\n    const [dbEntries, setDbEntries] = useState([]);\r\n    // const [dbQuery, setDbQuery] = useState({});  //all data --not needed for now\r\n    const [uniqueDates, setUniqueDates] = useState([]);\r\n    const [renderYearlyDates, setRenderYearlyDates] = useState([]);\r\n    const [renderYearlyEntries, setRenderYearlyEntries] = useState([]);\r\n\r\n    const [openCollapse, setOpenCollapse] = useState(false);\r\n    // const [openCollapses, setOpenCollapses] = useState([]); // create 2023-09-19 for serial animations\r\n\r\n    const [carouselSelection, setCarouselSelection] = useState(0);\r\n\r\n    // const [checked, setChecked] = useState(false);\r\n\r\n\r\n    let db= getDatabase();\r\n\r\n    useEffect(()=>{\r\n        let unique = [];\r\n        let dates = [];\r\n        let entries = [];\r\n        \r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n\r\n            const dbRef = ref(getDatabase());\r\n            await get(child(dbRef, 'HomeworkItems/'))\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    let queryData = snapshot.val();\r\n                    for (let i in Object.keys(queryData)) {\r\n                        unique = unique.concat(Object.keys(queryData)[i].slice(0,4));\r\n                        dates = dates.concat(Object.keys(queryData)[i]);\r\n                        entries = entries.concat(queryData[Object.keys(queryData)[i]]);\r\n                    }\r\n                    unique = [...new Set(unique)]; // remove all the duplicate years\r\n                    setUniqueDates(unique.reverse()) // set to state\r\n                    // setDbQuery(queryData); // not needed now\r\n                    setDbDates(dates.reverse()); // move recent to the top\r\n                    setDbEntries(entries.reverse()); //move recent to the top\r\n\r\n                    // set up default year -- do this only on the first render\r\n                    let defaultYear = unique[carouselSelection];\r\n                    // console.log(\"Default Year: \" + defaultYear)\r\n                    let allDates = dates;\r\n                    let allEntries = entries;\r\n                    let tempDates = [];\r\n                    let tempEntries = [];\r\n                    let tempOpenCollapses = []\r\n                    for (let i in allDates) {\r\n                        tempOpenCollapses = tempOpenCollapses.concat(false);\r\n                        if (allDates[i].slice(0,4) === defaultYear) {\r\n                            \r\n                            tempDates = tempDates.concat(allDates[i]);\r\n                            tempEntries = tempEntries.concat(allEntries[i]);\r\n                            setRenderYearlyDates(tempDates);\r\n                            setRenderYearlyEntries(tempEntries);\r\n                            \r\n                        }\r\n                        else {\r\n                            //do nothing\r\n                        }\r\n                    }\r\n\r\n                    setIsLoading(false);\r\n\r\n                    //2023-09-19 set up dynamic serial animation variables\r\n                    // console.log(\"tempOpenCollapses: \" + tempOpenCollapses);\r\n                    // setOpenCollapses(tempOpenCollapses);\r\n                    setTimeout(function () {\r\n                        setOpenCollapse(true);\r\n                    }, 333);\r\n                    \r\n                } else {\r\n                    console.log(\"No Data Available\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n        }\r\n        \r\n        // 2023-06-02 - only execute API call once!\r\n        // Execute API call \r\n        if (hasBeenFetched) {\r\n            // do nothing\r\n        }\r\n        else {\r\n            fetchData();\r\n            setHasBeenFetched(true);\r\n        }  \r\n\r\n    }, [db])\r\n\r\n    const handleCarouselSelect = (e) => {\r\n        // console.log(\"handleCarouselSelect:\")\r\n        // console.log(e)\r\n\r\n        // processing for YEARS\r\n        setOpenCollapse(false);\r\n        let yearRelevantDates = [];\r\n        let yearRelevantEntries=[];\r\n        for (let i in dbDates) {\r\n            if (dbDates[i].slice(0,4) === uniqueDates[e]) {\r\n                // console.log(dbDates[i])\r\n                // console.log(dbEntries[i])\r\n                yearRelevantDates = yearRelevantDates.concat(dbDates[i])\r\n                yearRelevantEntries = yearRelevantEntries.concat(dbEntries[i])\r\n\r\n                setRenderYearlyDates(yearRelevantDates);\r\n                setRenderYearlyEntries(yearRelevantEntries);\r\n            }\r\n            else {\r\n                //do nothing\r\n            }\r\n        }\r\n\r\n        setCarouselSelection(e);\r\n        // setOpenCollapse(true);\r\n    };\r\n\r\n\r\n\r\n    // const handleClick = () => {\r\n    //     console.log(\"handleClick:\")\r\n    //     console.log(\"Selected Date: \" + uniqueDates[carouselSelection]);\r\n    //     let yearRelevantDates = [];\r\n    //     let yearRelevantEntries=[];\r\n    //     for (let i in dbDates) {\r\n    //         if (dbDates[i].slice(0,4) === uniqueDates[carouselSelection]) {\r\n    //             console.log(dbDates[i])\r\n    //             console.log(dbEntries[i])\r\n    //             yearRelevantDates = yearRelevantDates.concat(dbDates[i])\r\n    //             yearRelevantEntries = yearRelevantEntries.concat(dbEntries[i])\r\n    //         }\r\n    //         else {\r\n    //             //do nothing\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const handleAnimate = () => {\r\n    //     setOpenCollapse(!openCollapse)\r\n    // };\r\n\r\n    const handleSlide = () => {\r\n        setOpenCollapse(false)  \r\n    };\r\n\r\n    const handleSlid = () => {\r\n        setOpenCollapse(true);\r\n    };\r\n\r\n    const isMobile = useMediaQuery({ query: '(max-width: 950px)' });\r\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\r\n\r\n    const mobileCarouselItemStyle={\r\n        width: \"350px\",\r\n        height: \"50px\",\r\n    };    \r\n    const normalCarouselItemStyle={\r\n        width: \"850px\",\r\n        height: \"50px\",\r\n    };\r\n\r\n    const carouselDivStyle = {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    };\r\n\r\n    return(\r\n        <div className=\"HomeworkContainer\">\r\n            <div className=\"SectionTitle\">\r\n                Homework\r\n            </div>\r\n            {/* <div className=\"HomeworkText\">\r\n                This section will eventually allow students to track their past and present homework.\r\n            </div> */}\r\n\r\n            <div classname=\"tempCarousel\" style={{display: \"flex\", flexDirection: \"column\", justifyContent:\"center\", alignItems: \"center\", marginBottom: \"33px\" }}>\r\n                <Carousel variant=\"dark\" \r\n                          indicators={false} \r\n                          interval={null}\r\n                          onSelect={handleCarouselSelect}\r\n                          onSlide={handleSlide}\r\n                          onSlid={handleSlid}\r\n                          style={{margin: \"0, auto\", maxWidth: \"850px\"}}>\r\n                    {uniqueDates.map((year, idx)=>(\r\n                        <Carousel.Item key={idx} style={isMobile&&isPortrait ? mobileCarouselItemStyle : normalCarouselItemStyle}>\r\n                            <div style={carouselDivStyle}>\r\n                                <h2><i>{year}</i></h2>\r\n                            </div>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            </div>\r\n\r\n\r\n            {/* <div>\r\n                <Button onClick={handleAnimate}>\r\n                    Animate\r\n                </Button>\r\n            </div> */}\r\n\r\n            <div className=\"HomeworkLoader\">\r\n                {isLoading ? (\r\n                    <div className=\"loader\">\r\n                        <div className=\"inner one\"></div>\r\n                        <div className=\"inner two\"></div>\r\n                        <div className=\"inner three\"></div>\r\n                    </div>\r\n                ) : null }\r\n            </div>\r\n\r\n            <div className=\"AllHomeworkComponents\">\r\n                {renderYearlyDates.map((date, idx)=>(\r\n                    <div style={openCollapse ? \r\n                        {\r\n                            transition: \"opacity 1.5s\",\r\n                            // transition: `opacity ${idx*1200}ms`,\r\n                            opacity: \"1\"\r\n                        }\r\n                        : \r\n                        {\r\n                            // transition: \"opacity 0.5s\",\r\n                            // transition: `opacity ${idx}s`,\r\n                            opacity: \"0\",\r\n                            pointerEvents: \"none\"\r\n                        }\r\n                    } key={idx}>\r\n                        {/* <Collapse in={openCollapse}> */}\r\n                        <HomeworkItem key={idx} title={date} data={renderYearlyEntries[idx]} />\r\n                        {/* </Collapse> */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* <div>\r\n                <Button onClick={handleClick}>\r\n                    Show Data\r\n                </Button>\r\n            </div>\r\n            \r\n            <div className=\"AllHomeworkComponents\">\r\n                {dbDates.length>0 && dbDates.map((date, idx) => (\r\n                   <HomeworkItem key={idx} title={date} data={dbEntries[idx]} />\r\n                ))}\r\n            </div> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Homework;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport GuessemLogo from '../../assets/game images/GuessemLogo_NoBorder.png';\r\n\r\nimport './GameLibrary.css';\r\n\r\nconst GameLibrary = () => {\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const games = ['Guessem: Secret Spelling Words'];\r\n\r\n    const handleClick = () => {\r\n        navigate('/LetterBox');\r\n    };\r\n\r\n    return(\r\n        <div className=\"GameLibraryContainer\">\r\n            <div className=\"SectionTitle\">\r\n                Game Library\r\n            </div>\r\n            <div className=\"GameCardContainer\">\r\n                {games.map((game, idx) => (\r\n                    <Card key={idx} style={{ width: \"20rem\", border: \"3px solid black\" }} onClick={handleClick}>\r\n                        <Card.Img variant=\"top\" src={GuessemLogo} style={{ backgroundColor: \"lightgray\", borderBottom: \"2px solid black\" }}/>\r\n                        <Card.Body style={{ fontSize: \"1.25em\" }}>\r\n                            {game} \r\n                        </Card.Body> \r\n                    </Card>\r\n                    // <div key={idx} className=\"GameCard\">\r\n                    //     <div className=\"GameCardTopSection\">asdf</div>\r\n                    //     <div className=\"GameCardMiddleLine\"></div>\r\n                    //     <div className=\"GameCardBottomSection\">{game}</div>\r\n                    // </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameLibrary;","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './SetCard.css';\r\n\r\nconst SetCard = (props) => {\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    let setPK = props.data.PK;\r\n    let setName = props.data.SetName;\r\n    let setAuthor = props.data.SetAuthor;\r\n    let setCards = props.data.SetCards;\r\n    let setCompletions = props.data.SetCompletions;\r\n\r\n    const handleClick = () => {\r\n        console.log(props.data)\r\n        navigate(\"/FlashcardStudy\", { state: { setPK:setPK, setName:setName, setCards:setCards, setCompletions:setCompletions }});\r\n    }\r\n\r\n    return(\r\n        <div className=\"SetCard\" onClick={handleClick}>\r\n            <div></div>\r\n            <div className=\"SetName\">\r\n                <h4>{setName}</h4>\r\n            </div>\r\n            <div>\r\n                {Object.keys(setCards).length} cards\r\n            </div>\r\n            <div className=\"SetAuthor\">\r\n                <div>Author:</div>\r\n                <div>{setAuthor}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetCard;","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {getDatabase, get, ref, child } from \"firebase/database\";\r\n\r\nimport SetCard from \"./SetCard\";\r\n\r\nimport './FlashcardLibrary.css';\r\n\r\n\r\nconst FlashcardLibrary = () => {\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [dbSets, setDbSets] = useState([]);\r\n    const [stateData, setStateData] = useState(false);\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    let location = useLocation();\r\n    let db = getDatabase();\r\n        \r\n\r\n    useEffect(()=>{\r\n        let flashcardSets = [];\r\n\r\n        if (!location.state) {\r\n            setStateData(false);\r\n        }\r\n        else {\r\n            setStateData(true);\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n\r\n            const dbRef = ref(getDatabase());\r\n            await get(child(dbRef, 'Flashcards/'))\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    let queryData = snapshot.val();\r\n                    for (let i in Object.keys(queryData)) {\r\n                        flashcardSets = flashcardSets.concat(queryData[Object.keys(queryData)[i]]);\r\n                        flashcardSets[i].PK = Object.keys(queryData)[i];\r\n                    }\r\n\r\n                    setDbSets(flashcardSets);\r\n                    setIsLoading(false);\r\n                    \r\n                } else {\r\n                    console.log(\"No Data Available\")\r\n                    setIsLoading(false);\r\n                    setNoData(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n        }\r\n\r\n        // Execute API call\r\n        fetchData();\r\n    }, [db, stateData, location.state]);\r\n    \r\n    return(\r\n        <div className=\"FlashcardLibraryContainer\">\r\n            {/* Loader */}\r\n            <div className=\"FlashcardLibraryLoader\">\r\n                {isLoading \r\n                    ? \r\n                        <div className=\"LibraryLoader\">\r\n                            <div className=\"LibraryInner one\"></div>\r\n                            <div className=\"LibraryInner two\"></div>\r\n                            <div className=\"LibraryInner three\"></div>\r\n                        </div>\r\n                    : \r\n                        <div>\r\n                            {noData \r\n                                ? \r\n                                    <div>There is no flashcard data in the database</div>\r\n                                :             \r\n                                    // start library\r\n                                    <div className=\"FlashcardSetGrid\">\r\n                                        {dbSets.length>0 && dbSets.map((set, idx) => (\r\n                                            // I need to fix this. setNum is a quickhack at replacing a PK. This is bad practice. Change ASAP\r\n                                            <SetCard className=\"SetCard\" key={idx} data={set} />\r\n                                        ))}\r\n                                    </div>\r\n                            } \r\n                        </div>\r\n                }\r\n            </div>   \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardLibrary","import React from 'react';\r\n\r\nconst NoFlashcards = () => {\r\n    return(\r\n        <div>\r\n            Sorry there are no flashcards for some set\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoFlashcards;","import React, { useState, useRef } from 'react';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { ref, onValue, set } from \"firebase/database\";\r\n\r\nimport bookData from '../../assets/BookReportData.json';\r\n\r\nimport './BookReports.css';\r\n\r\nconst BookReports = (props) => {\r\n\r\n    const db = props.db;\r\n\r\n    const refTextInput = useRef();\r\n\r\n    const [textFill, setTextFill] = useState(\"\");\r\n\r\n    const [selectedIdx, setSelectedIdx] = useState(0);\r\n    const [selectedBook, setSelectedBook] = useState(\"\");\r\n    const [selectedSection, setSelectedSection] = useState(\"\");\r\n\r\n    const [showLoadAlert, setShowLoadAlert] = useState(false);\r\n    const [headerLoadAlert, setHeaderLoadAlert] = useState(\"\");\r\n    const [textLoadAlert, setTextLoadAlert] = useState(\"\");\r\n    const [showSubmitAlert, setShowSubmitAlert] = useState(false);\r\n    const [headerSubmitAlert, setHeaderSubmitAlert] = useState(\"\");\r\n    const [textSubmitAlert, setTextSubmitAlert] = useState(\"\");\r\n    const [showSaveAlert, setShowSaveAlert] = useState(false);\r\n    const [headerSaveAlert, setHeaderSaveAlert] = useState(\"\");\r\n    const [textSaveAlert, setTextSaveAlert] = useState(\"\");\r\n\r\n    const toggleShowLoadAlert = () => {\r\n        let updateShowLoadAlert = !showLoadAlert;\r\n        setShowLoadAlert(updateShowLoadAlert);\r\n    };\r\n\r\n    const toggleShowSaveAlert = () => {\r\n        let updateShowSaveAlert = !showSaveAlert;\r\n        setShowSaveAlert(updateShowSaveAlert);\r\n    };\r\n\r\n    const toggleShowSubmitAlert = () => {\r\n        let updateShowSubmitAlert = !showSubmitAlert;\r\n        setShowSubmitAlert(updateShowSubmitAlert);\r\n    };\r\n\r\n    const handleSelectBook = (e) => {\r\n        let updateSelectedBook = bookData.Books[e];\r\n        console.log(\"handleSelectBook: \" + updateSelectedBook)\r\n        setSelectedBook(updateSelectedBook);\r\n        setSelectedIdx(e);\r\n        setSelectedSection(\"\");\r\n    }\r\n\r\n    const handleSelectSection = (e) => {\r\n        let updateSelectedSection = bookData.Sections[selectedIdx][e];\r\n        console.log(\"handleSelectSection: \" + updateSelectedSection);\r\n        setSelectedSection(updateSelectedSection)\r\n    }\r\n\r\n    const handleLoad = (event) => {\r\n        event.preventDefault();\r\n        //create a Firebase ref \r\n        const refSection = ref(db, 'BookReports/Saved/' + selectedBook + '/' + selectedSection + '/data');\r\n        // create listener to take snapshot of db\r\n        onValue(refSection, (snapshot) => {\r\n            const data = snapshot.val();\r\n            console.log(data)\r\n            if (data === \"\" || data === null) {\r\n                setHeaderLoadAlert(\"No Saved Data\");\r\n                setTextLoadAlert(\"There is nothing saved for \" + selectedBook + \", \" + selectedSection + \". Please double check your selection, or start a new draft.\");\r\n                toggleShowLoadAlert();\r\n            }\r\n            else {\r\n                setTextFill(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n        let currentTextSave = refTextInput.current.value;\r\n        // If a book hasn't yet been selected:\r\n        if (selectedBook === \"\" || selectedBook === \"---\") {\r\n            setHeaderSaveAlert(\"No Book Selected\")\r\n            setTextSaveAlert(\"Please select a book and a section from the menus and try again.\")\r\n            toggleShowSaveAlert();\r\n        }\r\n        // Or if a section hasn't yet been selected\r\n        else if (selectedSection === \"\" || selectedSection === '---') {\r\n            setHeaderSaveAlert(\"No Section Selected\")\r\n            setTextSaveAlert(\"Please select a section from the menu and try again.\")\r\n            toggleShowSaveAlert();\r\n        }\r\n        // if nothing has been entered\r\n        else if (currentTextSave === \"\") {\r\n            setHeaderSaveAlert(\"No Text Entered\")\r\n            setTextSaveAlert(\"You haven't written anything for your book report. Please enter some text and try saving again.\")\r\n            toggleShowSaveAlert();\r\n        }\r\n        else {\r\n            setHeaderSaveAlert(\"Draft Saved\")\r\n            setTextSaveAlert(\"Your book report has been saved. Feel free to write more and save, or close everything and load it up again next time.\")\r\n\r\n            const refSection = ref(db, ('BookReports/Saved/' + selectedBook + '/' + selectedSection));\r\n            set(refSection, {\r\n                data: currentTextSave\r\n            });\r\n            toggleShowSaveAlert();\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let currentTextSubmit = refTextInput.current.value;\r\n        if (selectedBook === \"\" || selectedBook === \"---\") {\r\n            setHeaderSubmitAlert(\"No Book Selected\")\r\n            setTextSubmitAlert(\"Please select a book and a section from the menus and try again.\")\r\n            toggleShowSubmitAlert();\r\n        }\r\n        // Or if a section hasn't yet been selected\r\n        else if (selectedSection === \"\" || selectedSection === '---') {\r\n            setHeaderSubmitAlert(\"No Section Selected\")\r\n            setTextSubmitAlert(\"Please select a section from the menu and try again.\")\r\n            toggleShowSubmitAlert();\r\n        }\r\n        // if nothing has been entered\r\n        else if (currentTextSubmit === \"\") {\r\n            setHeaderSubmitAlert(\"No Text Entered\")\r\n            setTextSubmitAlert(\"You haven't written anything for your book report. Please enter some text and try saving again.\")\r\n            toggleShowSubmitAlert();\r\n        }\r\n        else {\r\n            setHeaderSubmitAlert(\"Submitted\")\r\n            setTextSubmitAlert(\"Your book report has been submitted. Feel free to write more, update, and save. If you want to update later, close everything, load it up again next time, and submit your update.\")\r\n\r\n            const refSection = ref(db, ('BookReports/Submitted/' + selectedBook + '/' + selectedSection));\r\n            set(refSection, {\r\n                data: currentTextSubmit\r\n            });\r\n            toggleShowSubmitAlert();\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"BookReportContainer\">\r\n            <div className=\"SectionTitle\">\r\n                Book Reports\r\n            </div>\r\n            <div className=\"BookReportSelectionBar\">\r\n                <div className=\"BookDropdown\">\r\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Select a Book\" onSelect={handleSelectBook}>\r\n                        {bookData.Books.map((book, idx)=>\r\n                            <Dropdown.Item key={idx} eventKey={idx}>{book}</Dropdown.Item>\r\n                        )}\r\n                    </DropdownButton>\r\n                </div>\r\n                <div className=\"ChapterDropdown\">\r\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Select a Chapter/Section\" onSelect={handleSelectSection}>\r\n                        {bookData.Sections[selectedIdx].map((section, idx2) =>\r\n                            <Dropdown.Item key={idx2} eventKey={idx2}>{section}</Dropdown.Item>\r\n                        )}\r\n                    </DropdownButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"SelectionDisplay\">\r\n                <div className=\"Selection\">\r\n                    <b>Book:</b> {selectedBook}\r\n                </div>\r\n                <div className=\"Selection\">\r\n                    <b>Section:</b> {selectedSection}\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"ReportInput\" contentEditable> */}\r\n            <div className=\"ReportInput\">\r\n                <textarea \r\n                    className=\"ReportTextArea\"\r\n                    // style={{}} \r\n                    // ref={c=>this.textarea=c}\r\n                    ref={refTextInput}\r\n                    placeholder=\"type some text\"\r\n                    // rows={1} defaultValue=\"\"\r\n                    defaultValue = {textFill}\r\n                />\r\n                <div className=\"ReportControls\">\r\n                    <div className=\"ReportControlsAlert\">\r\n\r\n                    </div>\r\n                    <div className=\"ReportControlsButtons\">\r\n                        <Button variant=\"primary\" style={{ margin: '0px 15px'}} onClick={handleLoad}>Load</Button>\r\n                        \r\n                        <Modal centered show={showLoadAlert} onHide={toggleShowLoadAlert}>\r\n                            <Modal.Header>\r\n                                <Modal.Title><i>{headerLoadAlert}</i></Modal.Title>\r\n                                <button \r\n                                    onClick={toggleShowLoadAlert}\r\n                                    type=\"button\" \r\n                                    className=\"btn-close\" \r\n                                    data-bs-dismiss=\"modal\" \r\n                                    aria-label=\"Close\">\r\n                                </button>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                {textLoadAlert} \r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={toggleShowLoadAlert}>\r\n                                Close\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <Button variant=\"primary\" style={{ margin: '0px 15px'}} onClick={handleSave}>Save</Button>\r\n                        \r\n                        <Modal centered show={showSaveAlert} onHide={toggleShowSaveAlert}>\r\n                            <Modal.Header>\r\n                                <Modal.Title><i>{headerSaveAlert}</i></Modal.Title>\r\n                                <button \r\n                                    onClick={toggleShowSaveAlert}\r\n                                    type=\"button\" \r\n                                    className=\"btn-close\" \r\n                                    data-bs-dismiss=\"modal\" \r\n                                    aria-label=\"Close\">\r\n                                </button>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                {textSaveAlert} \r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={toggleShowSaveAlert}>\r\n                                Close\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <Button variant=\"success\" style={{ margin: '0px 15px'}} onClick={handleSubmit}>Submit</Button>\r\n                        \r\n                        <Modal centered show={showSubmitAlert} onHide={toggleShowSubmitAlert}>\r\n                            <Modal.Header>\r\n                                <Modal.Title><i>{headerSubmitAlert}</i></Modal.Title>\r\n                                <button \r\n                                    onClick={toggleShowSubmitAlert}\r\n                                    type=\"button\" \r\n                                    className=\"btn-close\" \r\n                                    data-bs-dismiss=\"modal\" \r\n                                    aria-label=\"Close\">\r\n                                </button>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                {textSubmitAlert}\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={toggleShowSubmitAlert}>\r\n                                Close\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookReports;","import React, { useRef } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nimport './Login.css';\r\n\r\nconst Login = (props) => {\r\n\r\n    const auth = getAuth();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\")\r\n        \r\n        signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\r\n        .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user;\r\n            console.log(\"Logged In: \" + user.uid)\r\n            console.log(Object.keys(user))\r\n            navigate('/Teacher', {replace:true});\r\n        })\r\n        .catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode + errorMessage)\r\n        });\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Login</h2>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" className=\"w-100 mt-4\">Log In</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? Sign up\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from '../../components/Login/Login';\r\n\r\nimport './TeacherLogin.css';\r\n\r\nconst TeacherLogin = () => {\r\n\r\n    return(\r\n        <div className=\"TeacherLoginContainer\">\r\n            <Login />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TeacherLogin;","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n\r\nconst TeacherTest = () => {\r\n\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n    const [nGlobal, setnGlobal] = useState(1);\r\n\r\n    const test = [1,2,3,4,5];\r\n    const handleButtonClick = (n) => {\r\n        setnGlobal(n);\r\n        setToggleModal(!toggleModal);\r\n    }\r\n    const modalOff = () => {\r\n        setToggleModal(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"TeacherTestContainer\" >\r\n            {test.map((n, idx) => (\r\n                <React.Fragment key={idx}>\r\n                    <Button style={{ margin: \"25px\" }} onClick={()=>handleButtonClick(n)}>#{n}</Button>\r\n                </React.Fragment>\r\n            ))}\r\n            <div>Other shit</div>\r\n            <div>Some other shit</div>\r\n            <div>The Last shit</div>\r\n               <Modal centered show={toggleModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>This is title for #{nGlobal}</Modal.Title>\r\n                        <button \r\n                            onClick={modalOff}\r\n                            type=\"button\" \r\n                            className=\"btn-close\" \r\n                            data-bs-dismiss=\"modal\" \r\n                            aria-label=\"Close\">\r\n                        </button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <span>\r\n                            {\"There is no data submitted for book #\" + nGlobal + \"!\"}\r\n                        </span>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={modalOff}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TeacherTest;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n// import Media from 'react-media';\r\nimport { GiOpenBook } from 'react-icons/gi';\r\n// import { GiOpenBook, GiBookCover } from 'react-icons/gi';\r\n\r\nimport bookData from '../../../assets/BookReportData.json';\r\n\r\nimport './TeacherBookReports.css';\r\n\r\n\r\nconst TeacherBookReports = () => {\r\n\r\n    // Book data variables\r\n    const [DataSection, setDataSection] = useState([]);\r\n    const [DataReport, setDataReport] = useState([]);\r\n    const [report, setReport] = useState(\"\");\r\n    // Modal variables\r\n    const [showNoReport, setShowNoReport] = useState(false);\r\n    const [modalBook, setModalBook] = useState(\"\");\r\n    const [modalSection, setModalSection] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n\r\n            let updateDataSection = [];\r\n            let updateDataReport = [];\r\n\r\n            const dbRef = ref(getDatabase());\r\n            await get(child(dbRef, 'BookReports/Submitted/'))\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n\r\n                    let queryData = snapshot.val();\r\n                    let keysBooks = Object.keys(queryData)\r\n\r\n                    for (let i in keysBooks) {\r\n                        let iBook = keysBooks[i]\r\n                        let iSections = queryData[iBook]\r\n                        let keysSections = Object.keys(iSections);\r\n                        for (let j in keysSections) {\r\n                            let jSection = keysSections[j]\r\n                            let jBookReportData = queryData[iBook][jSection].data;\r\n                            if (jBookReportData === \"\" || jBookReportData === null) {\r\n                                // console.log(\"Skipped: \" + iBook + \" - \" + jSection)\r\n                            }\r\n                            else {\r\n                                // console.log(\"Made Button for \" + iBook + ' - ' + jSection)\r\n                                updateDataSection = updateDataSection.concat(jSection);\r\n                                updateDataReport = updateDataReport.concat(jBookReportData);\r\n                            }\r\n                        }\r\n                    }\r\n                    setDataSection(updateDataSection);\r\n                    setDataReport(updateDataReport);\r\n                } else {\r\n                    console.log(\"No Data Available\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n        }\r\n        \r\n        // Execute the API call\r\n        fetchData();\r\n\r\n    }, [report]);\r\n    \r\n    const toggleShowNoReport = (book, section) => {\r\n        setModalBook(book);\r\n        setModalSection(section)\r\n        let updateShowNoReport = !showNoReport;\r\n        setShowNoReport(updateShowNoReport)\r\n    }\r\n\r\n    const modalOff = () => {\r\n        setShowNoReport(false);\r\n    }\r\n\r\n    const handleClick = (r) => {\r\n        setReport(\"\");\r\n        setReport(r)\r\n    };\r\n\r\n    return(\r\n        <div className=\"TeacherBookReportsContainer\">\r\n            <div className=\"TeacherBookReportsHeader\">\r\n                Available Book Reports:\r\n            </div>\r\n            <div className=\"TeacherBookReportsAllButtonContainer\">\r\n                {bookData.Books.map((book,idx)=> {\r\n                    if (book === \"---\") {\r\n                        return(null)\r\n                    }\r\n                    else {\r\n                        return(\r\n                            <div key={idx} className=\"TeacherBookReportsButtonSet\">\r\n                                <div className=\"TeacherBookReportsIconAndTitle\">\r\n                                    <GiOpenBook style={{margin: \"0 10\"}}/>\r\n                                    {book}\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"TeacherBookReportsButtonsGrid\">\r\n                                    {bookData.Sections[idx].map((section, idx2) => {  \r\n                                        if (DataSection.includes(section)) {\r\n                                            // if section is in dataSection (i.e. there is report data), get the \r\n                                            // name of the book from dataBook at the same index\r\n                                            let dataIdx = DataSection.indexOf(section)\r\n\r\n                                            // checking ...Section[idx] against dataSection is good for now, but it's not sustainable\r\n                                            // if there are different books with identical sections names, we may get active buttons \r\n                                            // that don't actually have report data linked to them. This is very feasible, as many books just\r\n                                            // have \"Chapter 1\", etc. as a name \r\n                                            // 2021-10-20, actually this might be okay, as we iterate through each book. Think about the logic...\r\n                                            return(\r\n                                                <React.Fragment key={idx2}>\r\n                                                    <Button variant=\"success\" onClick={()=>handleClick(DataReport[dataIdx])}>\r\n                                                        {section}\r\n                                                    </Button>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return(\r\n                                                <React.Fragment key={idx2}>\r\n                                                    <Button variant=\"outline-success\" onClick={()=>toggleShowNoReport(book, section)} >\r\n                                                        {section}\r\n                                                    </Button>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    } \r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                )}\r\n            </div>\r\n            <div className=\"TeacherBookReportsData\">\r\n                {report}\r\n            </div>\r\n            <Modal centered show={showNoReport} onHide={toggleShowNoReport}>\r\n                <Modal.Header>\r\n                    <Modal.Title><i>No Report</i></Modal.Title>\r\n                    <button \r\n                        onClick={modalOff}\r\n                        type=\"button\" \r\n                        className=\"btn-close\" \r\n                        data-bs-dismiss=\"modal\" \r\n                        aria-label=\"Close\">\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <span>\r\n                        {\"There is no data submitted for \" + modalBook + \": \" + modalSection + \"!\"}\r\n                    </span>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={modalOff}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TeacherBookReports;","import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, DropdownButton, InputGroup, FormControl, Button, Form } from 'react-bootstrap';\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BsCheck2Square } from 'react-icons/bs';\r\nimport './CreateHomeworkEntryForm.css';\r\n\r\nconst CreateHomeworkEntryForm = () => {\r\n\r\n    const db = getDatabase();\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedYear, setSelectedYear] = useState(null);\r\n    const [selectedMonth, setSelectedMonth] = useState(null);\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n\r\n    const [prepDay, setPrepDay] = useState(false);\r\n\r\n    const [xFields, setxFields] = useState([1]);\r\n\r\n    const [homeworkItem, setHomeworkItem] = useState(['']);\r\n    const [descriptionItem, setDescriptionItem] = useState(['']);\r\n    const [toggleDesc, setToggleDesc] = useState([false]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(()=>{ \r\n\r\n    }, [toggleDesc])\r\n    // const [zFields, setzFields] = useState([]);\r\n\r\n    const yearList = [\"2020\",\"2021\",\"2022\", \"2023\"];\r\n    const monthList= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n    // const thirtyOneDayList = [\"January\",\"March\",\"May\", \"July\",\"August\",\"October\",\"December\"];\r\n\r\n    const handleYearSelect = (e) => {\r\n        // console.log(e)\r\n        setSelectedYear(e)\r\n        if (selectedMonth != null) {\r\n            console.log(\"DO SHIT\")\r\n        }\r\n      }\r\n\r\n    const handleMonthSelect = (e) => {\r\n        setSelectedMonth(e)\r\n        if (selectedYear != null) {\r\n            setPrepDay(true);\r\n        }\r\n    }\r\n\r\n    const handleDaySelect = (e) => {\r\n        setSelectedDay(e)\r\n    }\r\n\r\n    \r\n    const daysInMonth = (month, year) => { // Use 1 for January, 2 for February, etc.\r\n        return new Date(year, month, 0).getDate();\r\n      }\r\n\r\n    const generateDays = (selectedYear, selectedMonth) => {\r\n        let DIY = daysInMonth(monthList.indexOf(selectedMonth)+1, selectedYear);\r\n        let daysList = [];\r\n        for (let i = 1; i<=DIY; i++) {\r\n            daysList = daysList.concat(i);\r\n            \r\n        }\r\n        return daysList;\r\n    }\r\n\r\n    const toggleDescription = (xID, xIdx) => {\r\n        console.log(\"xID: \" + xID);\r\n        console.log(\"idx1: \" + xIdx)\r\n        let updateToggle = [...toggleDesc];\r\n        updateToggle[xIdx] = !updateToggle[xIdx];\r\n        console.log(updateToggle)\r\n        setToggleDesc(updateToggle);\r\n        \r\n    };\r\n\r\n    const addHomeworkItem = () => {\r\n        let updateXFields = [...xFields];\r\n        updateXFields = updateXFields.concat(updateXFields.length+1);\r\n        setxFields(updateXFields);\r\n    };\r\n\r\n    const handleHomeworkItemInput = (idx, e) => {\r\n        let updateHomeworkItem = [...homeworkItem];\r\n        updateHomeworkItem[idx] = e;\r\n        setHomeworkItem(updateHomeworkItem);\r\n    };\r\n\r\n    const handleDescriptionInput = (idx, e) => {\r\n        let updateDescriptionItem = [...descriptionItem];\r\n        updateDescriptionItem[idx] = e;\r\n        setDescriptionItem(updateDescriptionItem);\r\n    };\r\n\r\n    const padZero = (n) => {\r\n        if (n.toString().length > 1) {\r\n            return(n.toString());\r\n        }\r\n        else {\r\n            return(\"0\" + n.toString());\r\n        }\r\n    };\r\n\r\n    const submitHomeworkAssignment = () => {\r\n        setIsLoading(true);\r\n        \r\n        // create JSON for submission\r\n        let submissionField = {};\r\n        submissionField[selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)] = {};\r\n\r\n        console.log(\"LOG: \" + descriptionItem)\r\n\r\n        for (let i in xFields) {\r\n\r\n            // check to see if the description field is empty. If so, set it to an empty string (don't just leave it as 'undefined')\r\n            if (descriptionItem[i]) {\r\n                submissionField[selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)][\"EntryNumber\"+i] = {\r\n                    \"HomeworkItem\": homeworkItem[i],\r\n                    \"Description\": descriptionItem[i]\r\n                }\r\n            }\r\n            else {\r\n                submissionField[selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)][\"EntryNumber\"+i] = {\r\n                    \"HomeworkItem\": homeworkItem[i],\r\n                    \"Description\": \"\"\r\n                }\r\n            \r\n\r\n            // submissionField[selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)][\"EntryNumber\"+i] = {\r\n            //     \"HomeworkItem\": homeworkItem[i],\r\n            //     \"Description\": descriptionItem[i]\r\n            }\r\n        };\r\n        console.log(submissionField);\r\n\r\n        // submit\r\n        const refSection = ref(db, ('HomeworkItems/'+ selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)));\r\n        set(refSection, \r\n            submissionField[selectedYear + '-' + padZero(monthList.indexOf(selectedMonth)+1) + '-' + padZero(selectedDay)]);\r\n\r\n        // animation and navigate away\r\n        setTimeout(function () {\r\n            setIsLoading(false);\r\n            navigate(\"/HW\");\r\n        }, 750);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"DateSelectionContainer\">\r\n                {/* <div className=\"BufferSpace\">\r\n                    \r\n                </div> */}\r\n                <div className=\"DateSelectionButtonsContainer\">\r\n                    <DropdownButton id=\"year\" title=\"Year\" onSelect={handleYearSelect}\r\n                        style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n                        {yearList.map((iYear, yearId) => (\r\n                            <Dropdown.Item eventKey={iYear} key={yearId}>{iYear}</Dropdown.Item>\r\n                        ))}\r\n                    </DropdownButton>\r\n                    <DropdownButton id=\"month\" title=\"Month\" onSelect={handleMonthSelect}\r\n                        style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n                        {monthList.map((iMonth, monthId) => (\r\n                            <Dropdown.Item eventKey={iMonth} key={monthId}>{iMonth}</Dropdown.Item>\r\n                        ))}\r\n                    </DropdownButton>\r\n                    <DropdownButton id=\"day\" title=\"Day\" onSelect={handleDaySelect}\r\n                        style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"10px\", marginRight: \"10px\" }}>                \r\n                        {!prepDay ? \r\n                            <Dropdown.Item eventKey=\"null\">Select a day</Dropdown.Item>\r\n                            :\r\n                            generateDays(selectedYear, selectedMonth).map((day, idx) => (\r\n                                <Dropdown.Item eventKey={day} key={idx}>{day}</Dropdown.Item>\r\n                            ))\r\n                        }\r\n                    </DropdownButton>\r\n                    \r\n                </div>\r\n                <div className=\"DateDisplayContainer\">\r\n                    <div className=\"DefaultText\" >\r\n                        Selected Date : \r\n                    </div>\r\n                    <div className=\"DisplayedDate\">\r\n                        {selectedYear ? selectedYear : \" \"}    \r\n                    </div>\r\n                    <div className=\"DisplayedDate\">\r\n                        {selectedMonth ? selectedMonth : \" \"}    \r\n                    </div>\r\n                    <div className=\"DisplayedDate\">\r\n                        {selectedDay ? selectedDay : \" \"}    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"CreateHomeworkEntryFormContainer\">\r\n                <div className=\"AddHomeworkItemButton\">\r\n                    <Button variant=\"secondary\" onClick={addHomeworkItem} >\r\n                        Add Homework Item\r\n                    </Button>\r\n                </div>\r\n                        \r\n                {xFields.map((xID, xIdx) => (\r\n                    <div key={xIdx} className=\"xEntryFields\">\r\n                        <div className=\"xRowFields\">\r\n                            <InputGroup className=\"mb-3\" style={{ width: \"75vw\", marginBottom: \"0px\" }} >\r\n                                <FormControl placeholder={\"Homework Item \" + xID} onChange={(e)=>handleHomeworkItemInput(xIdx, e.target.value)} style={{ width: \"55%\", margin: \"0px\" }}/>\r\n                                <Button variant=\"secondary\" onClick={()=>toggleDescription(xID,xIdx)}>Description +/-</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <div className=\"DescriptionField\">\r\n                        {!toggleDesc[xIdx] ?\r\n                            null                                               \r\n                            :\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Homework Item Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={2} onChange={(e)=>handleDescriptionInput(xIdx, e.target.value)} style={{ width: \"725px\" }} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"LoaderSubmitButtonContainer\">\r\n                    <div className=\"SubmitLoader\">\r\n                        {isLoading ? (\r\n                            <div className=\"loader\">\r\n                                <div className=\"inner one\"></div>\r\n                                <div className=\"inner two\"></div>\r\n                                <div className=\"inner three\"></div>\r\n                            </div>\r\n                            ) \r\n                        : \r\n                        null\r\n                        }\r\n                    </div>\r\n                    <div className=\"SubmitButton\">\r\n                        {((!(homeworkItem[0] === '')) && selectedYear && selectedMonth && selectedDay) ?\r\n                            <Button type=\"submit\" variant=\"success\" onClick={submitHomeworkAssignment}>Post Homework</Button>                        \r\n                        :\r\n                            <Button type=\"submit\" variant=\"outline-danger\">Post Homework</Button>\r\n                        }\r\n                    </div>\r\n                    <div className=\"DateCheck\">\r\n                        <span><BsCheck2Square style={selectedYear  ? { color: \"green\" } : { color: \"red\" } }/> Year</span>\r\n                        <span><BsCheck2Square style={selectedMonth ? { color: \"green\" } : { color: \"red\" } }/> Month</span>                       \r\n                        <span><BsCheck2Square style={selectedDay   ? { color: \"green\" } : { color: \"red\" } }/> Day</span>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateHomeworkEntryForm;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\n// import CreateHomeworkEntry from './CreateHomeworkEntry';\r\nimport CreateHomeworkEntryForm from './CreateHomeworkEntryForm';\r\n\r\n\r\nimport './TeacherHomework.css';\r\n\r\nconst TeacherHomework = () => {\r\n    return(\r\n        <div className=\"TeacherHomworkContainer\">\r\n            <Tabs defaultActiveKey=\"home\" id=\"teacher-navigation\" className=\"mb-3\" \r\n                  style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", marginTop:\"25px\"}}>\r\n                <Tab eventKey=\"view-edit\" title=\"View/Edit Entry\">\r\n                    View and Edit Current Homework Entries\r\n                </Tab>\r\n                <Tab eventKey=\"create\" title=\"Create Entry\">\r\n                    <div className=\"CreateHomeworkTitle\">\r\n                        <h5>Create New Homework Entry</h5>\r\n                        {/* <CreateHomeworkEntry /> */}\r\n                        <CreateHomeworkEntryForm />\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherHomework;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ref, set, getDatabase, get, child } from \"firebase/database\";\r\nimport app from '../../../firebase/firebase';\r\n\r\nimport './TeacherFlashcards.css';\r\n\r\nconst TeacherFlashcards = () => {\r\n\r\n    const database = getDatabase(app);\r\n    const currentDate = new Date();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [numDbCards, setNumDbCards] = useState(0);\r\n    const [CSVfile, setCSVFile] = useState();\r\n    const [dataArray, setDataArray] = useState([]); //this is the array containing CSV data to be processed\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [isImported, setIsImported] = useState(false);\r\n    const [isUploaded, setIsUploaded] = useState(false);\r\n    // for naming inputs\r\n    const [inputSetName, setInputSetName] = useState(\"\");\r\n    const [inputSetAuthor, setInputSetAuthor] = useState(\"\");\r\n    // for modal\r\n    const [showModal, setShowModal] = useState(false);\r\n    // for spinner\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n  \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            const dbRef = ref(getDatabase());\r\n            await get(child(dbRef, 'Flashcards/'))\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    let queryData = snapshot.val();\r\n                    const numPreexistingCards = Object.keys(queryData).length\r\n    \r\n                    console.log(\"There are currently \" + numPreexistingCards + \" sets currently in the flashcard library.\")\r\n                    setNumDbCards(numPreexistingCards); //find out how many cards are already in the db\r\n                    setIsLoading(false);\r\n                    \r\n                } else {\r\n                    console.log(\"No Data Available\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n        }\r\n        //call the API\r\n        fetchData();\r\n    }, [database]);\r\n\r\n\r\n    const fileReader = new FileReader();\r\n  \r\n    const handleOnChange = (e) => {\r\n        setCSVFile(e.target.files[0]);\r\n        setIsSelected(true);\r\n    };\r\n  \r\n    const csvFileToArray = string => {\r\n      const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\r\n      const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\r\n      console.log(\"How many values in HeadeR:\");\r\n      console.log(csvHeader.length);\r\n      ////// THIS WAS WHAT PARSED BEFORE\r\n      const array = csvRows.map(i => {\r\n        const values = i.split(\",\");         \r\n        const obj = csvHeader.reduce((object, header, index) => {\r\n          //2023-05-29 - this if clause was added to deal with splitting the example sentences if there was a comma in the example.\r\n          //           - if the number of headers change, we need to change the number hard-coded @ (index === 3), as the example sentence is the 3rd and final value in the CSV file\r\n          if (index === 3) {\r\n            object[header] = values.slice(3).join(',');\r\n          }\r\n          else {\r\n            object[header] = values[index];\r\n          }\r\n          return object;\r\n        }, {});\r\n\r\n        return obj;\r\n      });\r\n\r\n      setDataArray(array);\r\n    };\r\n  \r\n    const handleOnSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (CSVfile) {\r\n        fileReader.onload = function (event) {\r\n          const text = event.target.result;\r\n          setIsImported(true);\r\n          csvFileToArray(text);\r\n        };\r\n  \r\n        fileReader.readAsText(CSVfile);\r\n      }\r\n      else {\r\n        console.log(\"Choose a file first!\")\r\n      }\r\n    };\r\n  \r\n    const headerKeys = Object.keys(Object.assign({}, ...dataArray));\r\n\r\n    const handlePrematureClick = () => {\r\n        console.log(\"Upload CSV file before trying to submit\")\r\n    };\r\n\r\n    // const handleNav = () => {\r\n    //     navigate(\"/FlashcardLibrary\")\r\n    // };\r\n\r\n    const submitData = () => {\r\n        handleModalOpen();\r\n    };\r\n\r\n    const handleModalClose = () => setShowModal(false);\r\n    const handleModalOpen = () => setShowModal(true);\r\n\r\n    const handleNameText = (e) => {\r\n        setInputSetName(e.target.value);\r\n    };\r\n\r\n    const handleAuthorText = (e) => {\r\n        setInputSetAuthor(e.target.value);\r\n    };\r\n\r\n    const flashcardSetNumberHelper = (n) => {\r\n        if (n > 9999) {\r\n            console.log(\"n is greater than or equal to 10,000. Scale your webapp\")\r\n        }\r\n        else {\r\n            //I'm arbitrarily setting the maximum number of sets in the library to 10,000. Firebase free usage dictates 1Gb limit\r\n            const numDigits = n.toString().length;\r\n            if (numDigits < 4) {\r\n                const numForDB = n.toString().padStart(4,\"0\");\r\n                return numForDB;\r\n            }\r\n            else {\r\n                return n.toString();\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    const handleFinalSubmit = () => {\r\n        setIsLoading(true);\r\n        const newSetNum = numDbCards;\r\n        let newSetCards = {};\r\n\r\n        for (let i = 0; i < dataArray.length-1; i++) {\r\n                newSetCards = {...newSetCards,\r\n                    [\"card\" + i] : {\r\n                        \"Front\" : dataArray[i][headerKeys[0]],\r\n                        \"Back\" : dataArray[i][headerKeys[1]],\r\n                        \"WordType\" : dataArray[i][headerKeys[2]],\r\n                        \"Example\" : dataArray[i][headerKeys[3]]\r\n                    }\r\n                };\r\n        };\r\n\r\n        let creationTimeStamp = \r\n            currentDate.getFullYear() + '-' +\r\n            currentDate.getMonth()    + 1 + '-' + \r\n            currentDate.getDay()      + '-' + \r\n            currentDate.getHours()    + '-' + \r\n            currentDate.getMinutes()  + '-' + \r\n            currentDate.getSeconds()\r\n\r\n        let creation = {};\r\n\r\n        creation[creationTimeStamp] = 'Created';\r\n\r\n        let newDataToUpload = {\r\n            \"SetAuthor\" : inputSetAuthor,\r\n            \"SetName\" : inputSetName,\r\n            \"SetCards\" : newSetCards, \r\n            \"SetCompletions\" : creation\r\n        };\r\n\r\n        // console.dir(newDataToUpload)\r\n\r\n        // send data to Firebase\r\n        console.log(\"Padded Values: \" + flashcardSetNumberHelper(newSetNum))\r\n        const refSection = ref(database, ('Flashcards/Set' + flashcardSetNumberHelper(newSetNum)));\r\n        set(refSection, newDataToUpload)\r\n        .then(()=>{\r\n            setIsLoading(false);\r\n            setIsUploaded(true);\r\n            // navigate(\"/FlashcardLibrary\");\r\n        });\r\n        \r\n    };\r\n\r\n    const handleFinalNavigate = () => {\r\n        navigate(\"/FlashcardLibrary\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"TeacherFlashcardsContainer\" style={{ textAlign: \"center\" }}>\r\n            \r\n            <div className=\"TeacherFlashcardTitles\">\r\n                <div><b>Manage Flashcards</b></div>\r\n                <div><i>Import CSV to Flashcard</i></div>\r\n            </div>\r\n            \r\n            <div className=\"TeacherFlashcardsForm\">\r\n                <form>\r\n                    <input\r\n                        style={{ margin: \"25px 0px 25px 75px\", textAlign: \"center\" }}\r\n                        type={\"file\"}\r\n                        id={\"csvFileInput\"}\r\n                        accept={\".csv\"}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </form>\r\n                \r\n                <div className=\"TeacherFlashcardsButtons\">\r\n                    <div className=\"TeacherFlashcardsNoUploadButtons\">\r\n                        {isSelected\r\n                            ?   <Button\r\n                                    style={{ marginRight: \"15px\"}}\r\n                                    variant=\"secondary\"\r\n                                    onClick={(e) => {\r\n                                        handleOnSubmit(e);\r\n                                    }}\r\n                                    >\r\n                                    IMPORT CSV\r\n                                </Button>\r\n                            :   <Button\r\n                                    style={{ marginRight: \"15px\"}}\r\n                                    variant=\"outline-secondary\"\r\n                                    onClick={(e) => {\r\n                                        handleOnSubmit(e);\r\n                                    }}\r\n                                    >\r\n                                    IMPORT CSV\r\n                                </Button>\r\n                        }\r\n                        \r\n                        {isImported\r\n                            ?   <>\r\n                                <Button \r\n                                    style={{ marginLeft: \"15px\"}} \r\n                                    variant=\"success\"\r\n                                    onClick={submitData}\r\n                                >    \r\n                                    Upload\r\n                                </Button>\r\n\r\n                                <Modal\r\n                                    show={showModal}\r\n                                    onHide={handleModalClose}\r\n                                    backdrop=\"static\"\r\n                                    keyboard={false}\r\n                                >\r\n                                    <Modal.Header>\r\n                                        <Modal.Title>Flashcard Set Names</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <div style={{ marginBottom: \"15px\", fontSize: \"large\" }}>\r\n                                            <b>Please give this flashcard set a name and author</b>\r\n                                        </div>\r\n                                        <Form>\r\n                                            <Form.Group className=\"mb-3\" controlId=\"formSetName\">\r\n                                                <Form.Label>Flashcard Set Name</Form.Label>\r\n                                                {isUploaded\r\n                                                    ? \r\n                                                        <Form.Control type=\"text\" placeholder=\"Enter set name\" onChange={handleNameText} disabled />\r\n                                                    : \r\n                                                        <Form.Control type=\"text\" placeholder=\"Enter set name\" onChange={handleNameText}/>\r\n                                                }\r\n                                                <Form.Text className=\"text-muted\">\r\n                                                    This will be diplayed on a card in the Flascard library\r\n                                                </Form.Text>\r\n                                            </Form.Group>\r\n                                            <Form.Group className=\"mb-3\" controlId=\"formSetAuthor\">\r\n                                                <Form.Label>Flashcard Set Author</Form.Label>\r\n                                                {isUploaded\r\n                                                    ? \r\n                                                        <Form.Control type=\"text\" placeholder=\"Enter author name/ID\" onChange={handleAuthorText} disabled />\r\n                                                    : \r\n                                                        <Form.Control type=\"text\" placeholder=\"Enter author name/ID\" onChange={handleAuthorText} />\r\n                                                }\r\n                                                <Form.Text className=\"text-muted\">\r\n                                                    Please write a name students will recognize\r\n                                                </Form.Text>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <div className=\"ModalFooter\">\r\n                                            <div className=\"spinner\">\r\n                                                {isLoading \r\n                                                    ? (\r\n                                                    <div className=\"ModalLoader\">\r\n                                                        <div className=\"ModalInner one\"></div>\r\n                                                        <div className=\"ModalInner two\"></div>\r\n                                                        <div className=\"ModalInner three\"></div>\r\n                                                    </div>\r\n                                                    ) \r\n                                                    :   null \r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"ModalButtons\">\r\n                                                {isUploaded\r\n                                                    ?   \r\n                                                        <div>\r\n                                                            <Button variant=\"primary\" onClick={handleFinalNavigate}>\r\n                                                                Flashcard Library\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    :   \r\n                                                        <div>\r\n                                                            <Button variant=\"secondary\" onClick={handleModalClose} style={{ marginRight: \"5px\" }}>\r\n                                                                Close\r\n                                                            </Button>\r\n                                                            {inputSetName.length > 0 && inputSetAuthor.length > 0\r\n                                                                ?   <Button variant=\"success\" onClick={handleFinalSubmit} style={{ marginLeft: \"5px\" }}>Submit</Button>\r\n                                                                :   <Button variant=\"outline-danger\" style={{ marginLeft: \"5px\" }}>Submit</Button>\r\n                                                            }\r\n                                                        </div>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                                </>\r\n                            :   <Button \r\n                                    style={{ marginLeft: \"15px\"}} \r\n                                    variant=\"outline-success\"\r\n                                    onClick={handlePrematureClick}\r\n                                >\r\n                                    Upload\r\n                                </Button>\r\n\r\n\r\n                        }\r\n\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n    \r\n            <br />\r\n\r\n            <div className=\"TeacherFlashcardDataInstructions\">\r\n                {isImported\r\n                    ?\r\n                        <div style={{ margin: \"5px 0px 25px 0px\" }}>---------- Please review your data ----------</div>\r\n                    :        \r\n                        null\r\n                }\r\n            </div>\r\n\r\n            <div className=\"TeacherFlashcardsDataTable\">        \r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        {headerKeys.map((key, idx1) => (\r\n                        <th key={idx1}>{key}</th>\r\n                        ))}\r\n                    </tr>\r\n                    </thead>\r\n            \r\n                    <tbody>\r\n                    {dataArray.map((item, idx2) => (\r\n                        <tr key={idx2}>\r\n                        {Object.values(item).map((val, idx3) => (\r\n                            <td key={idx3}>{val}</td>\r\n                        ))}\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\nexport default TeacherFlashcards;","import React, { useState, useEffect } from 'react';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nimport './Teacher.css';\r\n\r\nimport TeacherTest from './TeacherTest/TeacherTest';\r\nimport TeacherBookReports from './TeacherBookReports/TeacherBookReports';\r\nimport TeacherHomework from './TeacherHomework/TeacherHomework';\r\nimport TeacherFlashcards from './TeacherFlashcards/TeacherFlashcards';\r\n\r\nconst Teacher = () => {\r\n\r\n    let db = getDatabase();\r\n    const auth = getAuth();\r\n\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userStatus, setUserStatus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                // User is signed in, see docs for a list of available properties\r\n                // https://firebase.google.com/docs/reference/js/firebase.User\r\n                //   const uid = user.uid;\r\n                const updateUserEmail = user.email\r\n                //   console.log(user)\r\n              setUserEmail(updateUserEmail)\r\n              setUserStatus(true);\r\n            } else {\r\n              // User is signed out\r\n              // ...\r\n              setUserEmail(\"You aren't allowed in here\")\r\n            }\r\n          });\r\n    }, [auth, db])\r\n\r\n    return(\r\n        <div className=\"TeacherContainer\">\r\n            {userStatus ? \r\n                <>\r\n                <div className=\"SectionTitle\">Teacher Console</div>\r\n                <div className=\"TeacherNavigation\">\r\n                    <Tabs defaultActiveKey=\"home\" id=\"teacher-navigation\" className=\"mb-3\" \r\n                    style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\"}}>\r\n                        <Tab eventKey=\"home\" title=\"Home\">\r\n                            <div className=\"TeacherMessage\">\r\n                                <span><b>Teacher Home</b></span>\r\n                                <br />\r\n                                <br />\r\n                                <span>Welcome back, {userEmail} </span>\r\n                            </div>\r\n                        </Tab>\r\n                        <Tab eventKey=\"homework\" title=\"Homework\">\r\n                            <TeacherHomework />\r\n                        </Tab>\r\n                        <Tab eventKey=\"flashcards\" title=\"Flashcards\">\r\n                            <TeacherFlashcards />\r\n                        </Tab>\r\n                        <Tab eventKey=\"book-report\" title=\"Book Reports\">\r\n                            <TeacherBookReports />\r\n                        </Tab>\r\n                        <Tab eventKey=\"test\" title=\"Test\">\r\n                            <TeacherTest />\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n                </>\r\n            : \r\n                <div style={{ margin: \"25px 0px\", fontSize: \"1.33em\" }}> \r\n                    You are not authorized to use this page. Please sign in and try again. \r\n                </div> \r\n            \r\n            }\r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default Teacher;","import React, { useState, useRef } from 'react';\r\n\r\nimport './RefIntro.css';\r\n\r\nconst RefIntro = () => {\r\n\r\n    const divRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n    const buttonRef = useRef(null);\r\n\r\n    const [tempState, setTempState] = useState(0);\r\n\r\n\r\n    const tempFunction = () => {\r\n       \r\n    };\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Basic Ref Functionality</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To gain a deeper understand of Refs and their usage.</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>The goal of this entry is to tap into DOM elements and</span>\r\n                <span>either modify their behavior or use their data using Refs.</span>\r\n            </div>\r\n            \r\n            <div className=\"Buttz\" ref={divRef}>\r\n                <div className=\"EntryInput\">\r\n                    <input ref={inputRef} />  \r\n                </div>\r\n                <div className=\"EntryButton\">\r\n                    <button ref={buttonRef}>Push</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RefIntro;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { getDatabase, ref, get, set, child } from \"firebase/database\";\r\n\r\nimport './DBArray.css';\r\n\r\nconst DBArray = () => {\r\n\r\n    const [displayArray, setDisplayArray] = useState([0]);\r\n\r\n    const [arrayInputs, setArrayInputs] = useState({\r\n        A: \"\",\r\n        B: \"\",\r\n        C: \"\",\r\n        D: \"\",\r\n        E: \"\",\r\n    });\r\n    \r\n    const db = getDatabase();\r\n\r\n    useEffect(()=>{\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const dbRef = ref(getDatabase());\r\n            await get(child(dbRef, 'Notebook/Array'))\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    let queryData = snapshot.val();\r\n                    // console.log(\"Array: \")\r\n                    // console.log(queryData)\r\n                    setDisplayArray(queryData)\r\n                }\r\n            })\r\n        }\r\n\r\n        fetchData();\r\n    }, [db]);\r\n\r\n\r\n    const handleClick = () => {\r\n\r\n        let updateDisplayArray = [];\r\n     \r\n        for (let i=0;i<Object.keys(arrayInputs).length;i++){\r\n            let k = Object.keys(arrayInputs)[i];\r\n            let v = arrayInputs[k];\r\n\r\n            if(v.length > 0){\r\n                updateDisplayArray = updateDisplayArray.concat(v);\r\n            }\r\n            //else do nothing\r\n        }\r\n\r\n        setDisplayArray(updateDisplayArray)\r\n\r\n        const refSection = ref(db, ('Notebook/Array/'));\r\n        set(refSection, updateDisplayArray);\r\n    };\r\n\r\n    const visualizeDisplayArray = (da) => {\r\n        let displayText = \" \";\r\n        if (da.length > 0) {\r\n            for (let i=0;i<da.length;i++){\r\n                displayText = displayText.concat(da[i] + \" \")\r\n            }\r\n            return(displayText);\r\n        }\r\n        //else do nothing\r\n    };\r\n\r\n    const visualizeInputArray = (ia) => {\r\n        if (ia.length > 0){\r\n            return(ia)\r\n        }\r\n        else{\r\n            return(\"X\")\r\n        }\r\n    };\r\n\r\n    const handleInput = (e, str) => {\r\n        let numLimit = [0,1,2,3,4,5,6,7,8,9,\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"];\r\n        let anyInput = e.target.value;\r\n        let updateArrayInputs = {...arrayInputs};\r\n\r\n        if (numLimit.includes(anyInput)){\r\n            updateArrayInputs[str] = anyInput;\r\n            setArrayInputs(updateArrayInputs);\r\n        }\r\n        else {\r\n            updateArrayInputs[str] = \"\";\r\n            setArrayInputs(updateArrayInputs);\r\n        }\r\n    };\r\n\r\n    const inputBoxStyle = {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"20px\",\r\n        border: \"solid 2px grey\",\r\n    };\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Firestore Questions: Storing Arrays</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To determine the scope and functionality of storing arrays in Firestore</span>\r\n                <span>Can we store a list as a value in a key-value pair?</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>There is a default array stored in a Firebase Realtime Database.</span>\r\n                <span>It is displayed in the first row, called the 'database array'.</span>\r\n                <span>Below it is a locally stored array called the 'input array'.</span>\r\n                <span>'X' represents no data. In the input boxes, we can set an input array.</span>\r\n                <span>We can update the database array by submitting the input array (as an array).</span>\r\n                <span>In the DB/Notebook/Array/ subsection of the database, the array is stored as:</span>\r\n                <span><b>Array:</b> 0: value1, 1: value2, 2: value3, 3: value4, 4: value5</span>\r\n            </div>\r\n            \r\n            <div>\r\n                <div style={{margin: \"25px\"}}>\r\n                    <div style={{fontSize: \"1.45em\"}} >The current database array is : [ {visualizeDisplayArray(displayArray)} ] </div>\r\n                    <div style={{fontSize: \"1.45em\"}} >The current input array is : [ {visualizeInputArray(arrayInputs.A)} {visualizeInputArray(arrayInputs.B)} {visualizeInputArray(arrayInputs.C)} {visualizeInputArray(arrayInputs.D)} {visualizeInputArray(arrayInputs.E)} ] </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <span><input type=\"text\" value={arrayInputs.A} placeholder={arrayInputs.A} maxlength=\"1\" onChange={(e)=>handleInput(e, \"A\")} style={inputBoxStyle} /> </span>\r\n                        <span><input type=\"text\" value={arrayInputs.B} placeholder={arrayInputs.B} maxlength=\"1\" onChange={(e)=>handleInput(e, \"B\")} style={inputBoxStyle} /> </span>\r\n                        <span><input type=\"text\" value={arrayInputs.C} placeholder={arrayInputs.C} maxlength=\"1\" onChange={(e)=>handleInput(e, \"C\")} style={inputBoxStyle} /> </span>\r\n                        <span><input type=\"text\" value={arrayInputs.D} placeholder={arrayInputs.D} maxlength=\"1\" onChange={(e)=>handleInput(e, \"D\")} style={inputBoxStyle} /> </span>\r\n                        <span><input type=\"text\" value={arrayInputs.E} placeholder={arrayInputs.E} maxlength=\"1\" onChange={(e)=>handleInput(e, \"E\")} style={inputBoxStyle} /> </span>\r\n                    </div>                \r\n                    <div>\r\n                        <Button onClick={handleClick}>\r\n                            Update DB Array\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DBArray;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { BiRadioCircle } from 'react-icons/bi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport './DynamicToggles.css';\r\n\r\n\r\nconst DynamicToggles = () => {\r\n\r\n    const [booleanListA, setBooleanListA] = useState([false]);\r\n    const [booleanListB, setBooleanListB] = useState([false]);\r\n    const [booleanListC, setBooleanListC] = useState([false]);\r\n    const [booleanListD, setBooleanListD] = useState([false]);\r\n\r\n    const [booleanObj, setBooleanObj] = useState({\r\n        val1: false,\r\n        val2: false\r\n    });\r\n\r\n    const [nComponents, setNComponents] = useState([1]);\r\n\r\n    useEffect(()=> {\r\n        // console.log(\"UseEffect is in effect\");\r\n    }, [booleanListA, nComponents])\r\n\r\n    const addComponent = () => {\r\n        let numComponents = nComponents.length\r\n        let updateComponents = nComponents;\r\n        updateComponents = updateComponents.concat(numComponents+1)\r\n        // console.log(\"updateComponents: \" + updateComponents)\r\n        setNComponents(updateComponents);\r\n        \r\n        // must also update booleanList \r\n        let updateBooleanListA = [...booleanListA];\r\n        updateBooleanListA = updateBooleanListA.concat(false);\r\n        // console.log(\"updateBooleanList: \" + updateBooleanListA)\r\n        setBooleanListA(updateBooleanListA);\r\n    };\r\n\r\n    const removeComponent = () => {\r\n        // console.log(\"removeComponent: \")\r\n    };\r\n\r\n    const addSubComponentA = (idx) => {\r\n        let updateBooleanListA = [...booleanListA];\r\n        updateBooleanListA[idx] = !updateBooleanListA[idx]\r\n        setBooleanListA(updateBooleanListA);\r\n    };\r\n\r\n    const addSubComponentB = (idx) => {\r\n        let updateBooleanListB = booleanListB;\r\n        updateBooleanListB[idx] = !updateBooleanListB[idx]\r\n        setBooleanListB(updateBooleanListB);\r\n    };\r\n\r\n    const addSubComponentC = (idx) => {\r\n        let updateBooleanObj = {...booleanObj};\r\n        updateBooleanObj.val1 = !updateBooleanObj.val1;\r\n        setBooleanObj(updateBooleanObj);\r\n    };\r\n\r\n    const addSubComponentD = (idx) => {\r\n        let updateBooleanObj = booleanObj;\r\n        updateBooleanObj.val2 = !updateBooleanObj.val2;\r\n        setBooleanObj(updateBooleanObj);\r\n    };\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Dynamic Toggling</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To have an active reminder how to toggle multiple components without</span>\r\n                <span>triggering all components.</span>\r\n                <span>This misunderstanding has happened far too many times not to have an </span>\r\n                <span>entry dedicated to it</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>EXPLANATION</span>\r\n                <span>MORE EXPLANATION</span>\r\n            </div>\r\n            \r\n            <hr />\r\n\r\n            <div className=\"EntryData\">\r\n                <div className=\"ButtonCockpit\">\r\n                    <Button variant=\"secondary\" onClick={()=>addComponent()} style={{ margin: \"0px 25px\" }}>\r\n                        Add Component\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={()=>removeComponent()} style={{ margin: \"0px 25px\" }}>\r\n                        Remove Component\r\n                    </Button>\r\n                </div>\r\n                {nComponents.map((id, idx) => (\r\n                    <div className=\"ComponentRow\">\r\n                        <div className=\"DynamicDataStyle\">\r\n                            <span>Component: {id}</span>\r\n                            <span>Index: {idx}</span>\r\n                        </div>\r\n                        \r\n                        {/* Working list variable column */}\r\n                        <div className=\"SubComponentColumn\">\r\n                            <div>\r\n                                <BiRadioCircle style={{ color: \"limegreen\", fontSize: \"20px\", marginBottom: \"5px\" }} /> List \r\n                            </div>\r\n                            <div className=\"SubComponentButtons\">\r\n                                <Button variant=\"secondary\" onClick={()=>addSubComponentA(idx)}>\r\n                                    +\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"SubComponentHidden\">\r\n                                {booleanListA[idx] ?\r\n                                    <span>On</span>\r\n                                    :\r\n                                    <span>Off</span>\r\n                                }\r\n                            </div>\r\n                        </div> \r\n\r\n                        {/* Non-working list variable column */}\r\n                        <div className=\"SubComponentColumn\">\r\n                            <div>\r\n                                <AiOutlineClose style={{ color: \"red\", fontSize: \"20px\", marginBottom: \"5px\" }} /> List\r\n                            </div>\r\n                            <div className=\"SubComponentButtons\">\r\n                                <Button variant=\"secondary\" onClick={()=>addSubComponentB(idx)}>\r\n                                    +\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"SubComponentHidden\">\r\n                                {booleanListB[idx] ?\r\n                                    <span>On</span>\r\n                                    :\r\n                                    <span>Off</span>\r\n                                }\r\n                            </div>\r\n                        </div> \r\n\r\n                        {/* Working object variable column */}\r\n                        <div className=\"SubComponentColumn\">\r\n                            <div>\r\n                                <BiRadioCircle style={{ color: \"limegreen\", fontSize: \"20px\", marginBottom: \"5px\" }} /> Object\r\n                            </div>\r\n                            <div className=\"SubComponentButtons\">\r\n                                <Button variant=\"secondary\" onClick={()=>addSubComponentC(idx)}>\r\n                                    +\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"SubComponentHidden\">\r\n                                {booleanObj.val1 ?\r\n                                    <span>On</span>\r\n                                    :\r\n                                    <span>Off</span>\r\n                                }\r\n                            </div>\r\n                        </div> \r\n\r\n                        {/* Non-working object variable column */}\r\n                        <div className=\"SubComponentColumn\">\r\n                            <div>\r\n                                <AiOutlineClose style={{ color: \"red\", fontSize: \"20px\", marginBottom: \"5px\" }} /> Object\r\n                            </div>\r\n                            <div className=\"SubComponentButtons\">\r\n                                <Button variant=\"secondary\" onClick={()=>addSubComponentD(idx)}>\r\n                                    +\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"SubComponentHidden\">\r\n                                {booleanObj.val2 ?\r\n                                    <span>On</span>\r\n                                    :\r\n                                    <span>Off</span>\r\n                                }\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DynamicToggles;","import React from 'react';\r\n\r\nimport './TimeStamp.css';\r\n\r\nconst TimeStamp = () => {\r\n   \r\n    const currentDate = new Date();\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Timestamps</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To learn about the specific calls in JS to create a useable timestamp.</span>\r\n                <span>These timestamps will be used (probably as object keys in Firebase.</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>Just a bit of practice using Date() in JS.</span>\r\n                <span>Wanted to create a reference for later use</span>\r\n            </div>\r\n            <br />\r\n            \r\n            <div className=\"EntryData\">\r\n                <div className=\"EntryRow\"><b>Date:    </b> {Date()} </div>\r\n                <div className=\"EntryRow\"><b>Year:    </b> {currentDate.getFullYear()}</div>\r\n                <div className=\"EntryRow\"><b>Month:   </b> {currentDate.getMonth()} (this is an index)</div>\r\n                <div className=\"EntryRow\"><b>Day:     </b> {currentDate.getDay()} (this is also an index)</div>\r\n                <div className=\"EntryRow\"><b>Hours:   </b> {currentDate.getHours()}</div>\r\n                <div className=\"EntryRow\"><b>Minutes: </b> {currentDate.getMinutes()}</div>\r\n                <div className=\"EntryRow\"><b>Seconds: </b> {currentDate.getSeconds()}</div>\r\n                <div className=\"EntryRow\"><b>Testing: </b> {currentDate.toDateString()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeStamp;","import React from 'react';\r\n\r\nimport './DivButtonTest.css';\r\n\r\nconst DivButtonTest = () => {\r\n\r\n    // const [buttonClicked, setButtonClicked] = useState(0);\r\n    // const [divClicked, setDivClicked] = useState(0);\r\n\r\n    // const handleButtonClick = (event) => {\r\n    //     console.log(event)\r\n    //     setButtonClicked(counter => counter + 1);\r\n    // };\r\n\r\n    const handleMasterDivClick = (event) => {\r\n        console.log(\"Hello from Master.\");\r\n    };\r\n\r\n    const handleSubDivClick = () => {\r\n        console.log(\"Hello from SubDiv.\");\r\n    };\r\n\r\n    const handleChildOneClick = () => {\r\n        console.log(\"Hello from ChildOne.\");\r\n    };\r\n\r\n    const handleChildTwoClick = (event) => {\r\n        event.stopPropagation();\r\n        console.log(\"Hello from ChildTwo.\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Event Delegation and Propagation</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To discover the level of interconnectedness between elements in a div.</span>\r\n                <span>If a button and a div both have onClick handlers, how can we specifically manage both?</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>The following has 3 specific divs: 'master', 'sub', and 'child'.</span>\r\n                <span>Click the buttons for different messages in console log.</span>\r\n                <span>Compare children to see how event delegation is handled differently. </span>\r\n            </div>\r\n            <div className=\"TestDiv\" onClick={handleMasterDivClick}>\r\n                <div>There is some content in here</div>\r\n                <div>There is some more content here</div>\r\n                <div className=\"SubDivContainer\" onClick={handleSubDivClick}>\r\n                    <div className=\"ChildOne\" onClick={handleChildOneClick}>One</div>\r\n                    <div className=\"ChildTwo\" onClick={handleChildTwoClick}>Two</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DivButtonTest;","import React, { useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport './MediaQueries.css';\r\n\r\nconst MediaQueries = () => {\r\n\r\n    const [tempState, setTempState] = useState(0);\r\n\r\n\r\n    const tempFunction = () => {\r\n       \r\n    };\r\n\r\n\r\n    const isDesktopOrLaptop = useMediaQuery({query: '(min-width: 1224px)' });\r\n    const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' });\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\r\n    const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\r\n\r\n    return(\r\n        <div className=\"Entry\">\r\n            <div className=\"EntryTitle\">\r\n                <h2>Media Queries</h2>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryPurpose\">\r\n                <b>Purpose: </b>\r\n                <span>To find minimal and efficient media queries for use on the Homework app </span>\r\n                <span>Use this page to determine which device someone is using</span>\r\n            </div>\r\n            <br />\r\n            <div className=\"EntryReadme\">\r\n                <b>Use: </b>\r\n                <span>The following has 3 specific divs: 'master', 'sub', and 'child'.</span>\r\n                <span>Click the buttons for different messages in console log.</span>\r\n                <span>Compare children to see how event delegation is handled differently. </span>\r\n            </div>\r\n            \r\n            <div>\r\n                <h1>Device Test!</h1>\r\n                    {isDesktopOrLaptop && <p>You are a desktop or laptop</p>}\r\n                    {isBigScreen && <p>You  have a huge screen</p>}\r\n                    {isTabletOrMobile && <p>You are a tablet or mobile phone</p>}\r\n                    <p>Your are in {isPortrait ? 'portrait' : 'landscape'} orientation</p>\r\n                    {isRetina && <p>You are retina</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MediaQueries;","import React from 'react';\r\n\r\nimport RefIntro from './RefIntro';\r\nimport DBArray from './DBArray';\r\nimport DynamicToggles from './DynamicToggles';\r\nimport TimeStamp from './TimeStamp';\r\nimport DivButtonTest from './DivButtonTest';\r\nimport MediaQueries from './MediaQueries';\r\n\r\n\r\nimport './Notebook.css';\r\n\r\nconst Notebook = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"NotebookTitle\">\r\n                Notebook\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"NotebookEntry\">\r\n                <MediaQueries />\r\n            </div>\r\n            <hr />\r\n\r\n            {/* 2023-10-26 */}\r\n            <div className=\"NotebookEntry\">\r\n                <RefIntro />\r\n            </div>\r\n            <hr />\r\n\r\n            {/* 2023-10-03 */}\r\n            <div className=\"NotebookEntry\">\r\n                <DBArray />\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"NotebookEntry\">\r\n                <DynamicToggles />\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"NotebookEntry\">\r\n                <TimeStamp />\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"NotebookEntry\">\r\n                <DivButtonTest />\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notebook;","import React from 'react';\r\n\r\nimport './Loader.css';\r\n\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"Loader\">\r\n            <div className=\"LoaderInner one\"></div>\r\n            <div className=\"LoaderInner two\"></div>\r\n            <div className=\"LoaderInner three\"></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Loader;","import React, { useCallback, useRef, useEffect } from \"react\";\r\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\r\n// import { Button } from 'react-bootstrap';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { propTypes } from \"react-bootstrap/esm/Image\";\r\n\r\nconst canvasStyles = {\r\n  position: \"fixed\",\r\n  pointerEvents: \"none\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  top: 0,\r\n  left: 0,\r\n};\r\n\r\nexport default function Realistic(props) {\r\n  const refAnimationInstance = useRef(null);\r\n\r\n  const getInstance = useCallback((instance) => {\r\n    refAnimationInstance.current = instance;\r\n  }, []);\r\n\r\n  const makeShot = useCallback((particleRatio, opts) => {\r\n    refAnimationInstance.current &&\r\n      refAnimationInstance.current({\r\n        ...opts,\r\n        origin: { y: 0.7 },\r\n        particleCount: Math.floor(200 * particleRatio)\r\n      });\r\n  }, []);\r\n\r\n  const fire = useCallback(() => {\r\n    makeShot(0.25, {\r\n      spread: 26,\r\n      startVelocity: 55\r\n    });\r\n\r\n    makeShot(0.2, {\r\n      spread: 60\r\n    });\r\n\r\n    makeShot(0.35, {\r\n      spread: 100,\r\n      decay: 0.91,\r\n      scalar: 0.8\r\n    });\r\n\r\n    makeShot(0.1, {\r\n      spread: 120,\r\n      startVelocity: 25,\r\n      decay: 0.92,\r\n      scalar: 1.2\r\n    });\r\n\r\n    makeShot(0.1, {\r\n      spread: 120,\r\n      startVelocity: 45\r\n    });\r\n  }, [makeShot]);\r\n\r\n  useEffect(()=>{\r\n    fire()\r\n  }, []);\r\n  // 2023-05-30 - if you want a silly set of animations, remove the dependency brackets and the fireworks will launch every time\r\n\r\n// const navigate = useNavigate();\r\n\r\n// const handleClick = () => {\r\n//     navigate(\"/FlashcardLibrary\");\r\n// }\r\n\r\n  return (\r\n    <>\r\n      <ReactCanvasConfetti refConfetti={getInstance} style={canvasStyles} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Modal, Alert, Form, FloatingLabel } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { ref, set, getDatabase } from \"firebase/database\";\r\nimport app from '../../../firebase/firebase';\r\n\r\nimport { RxSpeakerLoud, RxSpeakerOff } from 'react-icons/rx';\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport FlashcardConfetti from '../../FlashcardLibrary/FlashcardStudySection/Flashcard/FlashcardConfetti';\r\n\r\nimport imgStart from '../../../assets/game images/Aliens_Start.svg';\r\nimport imgRound1 from '../../../assets/game images/Aliens_Round1.svg';\r\nimport imgRound2 from '../../../assets/game images/Aliens_Round2.svg';\r\nimport imgRound3 from '../../../assets/game images/Aliens_Round3.svg';\r\nimport imgRound4 from '../../../assets/game images/Aliens_Round4.svg';\r\nimport imgRound5 from '../../../assets/game images/Aliens_Round5.svg';\r\nimport imgRound6 from '../../../assets/game images/Aliens_Round6.svg';\r\nimport imgRound7 from '../../../assets/game images/Aliens_Round7.svg';\r\nimport imgRound8 from '../../../assets/game images/Aliens_Round8.svg';\r\n\r\nimport './LetterBox.css';\r\n\r\n\r\nconst LetterBox = (props) => {\r\n    \r\n    const db = getDatabase(app);\r\n    const navigate = useNavigate();\r\n\r\n    const inputRef = useRef(null);\r\n    const modalRef = useRef(null);\r\n\r\n    const currentDate = new Date();\r\n\r\n    const [roundNum, setRoundNum] = useState(0);\r\n    const [wordList, setWordList] = useState([ 'frighten','bright','luxurious','chew','aware','curious','atlas','brave','couple','island']);\r\n    const [isAudio, setIsAudio] = useState(false);\r\n    const [guessInput, setGuessInput] = useState(\"\");\r\n    const [guessedLetters, setGuessedLetters] = useState([]);\r\n    const [inctLetters, setInctLetters] = useState([]);\r\n    const [messageState, setMessageState] = useState('none');\r\n    const [winState, setWinState] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalInput, setModalInput] = useState([\"\",\"\",\"\",\"\"]);\r\n    const [modalFocus, setModalFocus] = useState(0);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' });\r\n\r\n    useEffect(() => {\r\n        if (showModal) {\r\n            setTimeout(() => {\r\n                document.getElementById(\"initials\" + modalFocus).focus()\r\n                console.log(\"useEffect: Focus on #\" + modalFocus );\r\n              }, .01)\r\n        } else {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [guessedLetters, showModal, modalFocus, modalInput, guessInput]);\r\n\r\n    const tempWordObj = {\r\n        1: {\r\n            wordType: 'verb',\r\n            japanese: '怖がれる',\r\n            english: 'to scare someone or something',\r\n            exampleSentence: 'Halloween is a great time to try to frighten all of the neighbors in my neighborhood.'\r\n        },\r\n        2: {\r\n            wordType: 'adjective',\r\n            japanese: '明るい',\r\n            english: 'to be light or full of light (especially in color)',\r\n            exampleSentence: 'The bright light entered the house through the cracks in the curtains.'\r\n        },\r\n        3: {\r\n            wordType: 'adjective',\r\n            japanese: '贅沢な',\r\n            english: 'something that is very, very comfortable, pleasant, and usually expensive',\r\n            exampleSentence: 'When Arisa travels, she only stays at luxurious hotels with fancy rooms and wonderful service.'\r\n        },\r\n        4: {\r\n            wordType: 'verb',\r\n            japanese: '噛む',\r\n            english: 'to move one\\'s mouth up and down to mash food',\r\n            exampleSentence: 'Studies say that we should chew our food about 32 times before we swallow it.'\r\n        },\r\n        5: {\r\n            wordType: 'adjective',\r\n            japanese: '意識している・気が付ている',\r\n            english: 'having knowledge or being well-informed about a situation or fact',\r\n            exampleSentence: 'Carmen was aware that there was a war happening on the other side of the world, but she was unaware of how many people it affected.'\r\n        },\r\n        6: {\r\n            wordType: 'adjective',\r\n            japanese: '好奇心',\r\n            english: 'strongly wanting to learn or know about something',\r\n            exampleSentence: 'The curious child looked through the cupboards, searched all the boxes, and went into all the closets in the house.'\r\n        },\r\n        7: {\r\n            wordType: 'noun',\r\n            japanese: '地図帳',\r\n            english: 'a book of maps or charts',\r\n            exampleSentence: 'The school library has a complete world atlas with detailed maps of every continent.'\r\n        },\r\n        8: {\r\n            wordType: 'adjective',\r\n            japanese: '勇気ある',\r\n            english: 'being ready to face danger or pain; showing courage ',\r\n            exampleSentence: 'The brave warrior who fought the soldiers to protect the pricess died of his injuries.'\r\n        },\r\n        9: {\r\n            wordType: 'noun',\r\n            japanese: 'カップル・二人・二つ・ペア',\r\n            english: 'two people or things, usually considered a set',\r\n            exampleSentence: 'The couple bought a couple of matching rings.'\r\n        },\r\n        10: {\r\n            wordType: 'noun',\r\n            japanese: '島',\r\n            english: 'a piece of land surrounded by water.',\r\n            exampleSentence: 'Hokkaido and Kyushu are both islands in Japan.'\r\n        },\r\n    };\r\n\r\n    const imgNameObj = {\r\n        Round1: imgRound1,\r\n        Round2: imgRound2,\r\n        Round3: imgRound3,\r\n        Round4: imgRound4,\r\n        Round5: imgRound5,\r\n        Round6: imgRound6,\r\n        Round7: imgRound7,\r\n        Round8: imgRound8,\r\n    };\r\n\r\n    const alertObject = {\r\n        inct: {\r\n            color: 'danger',\r\n            // msg: 'Sorry, no \\'' + String(guessedLetters[guessedLetters.length-1]).toUpperCase() + '\\''\r\n            msg: 'Sorry, try again'\r\n        },\r\n        repeat: {\r\n            color: 'warning',\r\n            msg: 'You have already guessed that letter!'\r\n            // msg: 'You have already guessed ' + String(guessedLetters[guessedLetters.length-1]).toUpperCase()\r\n        },\r\n        crct: {\r\n            color: 'success',\r\n            msg: 'Nice guess!'\r\n        },\r\n        win: {\r\n            color: 'success',\r\n            msg: 'You won!'\r\n        },\r\n    }\r\n\r\n    const inputBoxStyle = {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"25px\",\r\n        // marginBottom: \"20px\",\r\n        border: \"solid 2px grey\",\r\n    };\r\n\r\n    const answerLetterBoxStyle = {\r\n        width: \"55px\",\r\n        height: \"75px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        fontSize: \"3.5em\",\r\n        borderBottom: \"solid 2px black\",\r\n        margin: \"0px 5px\",\r\n    };\r\n\r\n    const spaceBoxStyle = {\r\n        width: \"55px\",\r\n        height: \"75px\",\r\n        margin: \"0px 5px\",\r\n    };\r\n\r\n    const modalInputStyle = {\r\n        width: \"35px\", \r\n        textAlign: \"center\",\r\n        padding: \"5px 2px\", \r\n        marginRight: \"5px\",\r\n    };\r\n\r\n    const zeroPad = (str) => {\r\n        if (str.length < 2) \r\n            str = '0' + str;\r\n\r\n        return str;\r\n    };\r\n\r\n    const formatDate = () => {\r\n        let d = currentDate;\r\n        // let d = new Date('January 01, 2023 07:05:09');\r\n        let month = zeroPad('' + (d.getMonth() + 1));\r\n        let day = zeroPad('' + d.getDate());\r\n        let year = d.getFullYear();\r\n        let hours = d.getHours();\r\n        let minutes = zeroPad('' + d.getMinutes());\r\n        let seconds = zeroPad('' + d.getSeconds());\r\n\r\n        console.log([year,month,day].join('-') + 'T' + [hours, minutes, seconds].join(':'));\r\n        return([year, month, day].join('-') + 'T' + [hours, minutes, seconds].join(':'));\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        let inputLimit = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"];\r\n        let anyInput = e.target.value;\r\n        let updateGuessInput = \"\";\r\n\r\n        if (inputLimit.includes(anyInput)){\r\n            updateGuessInput = anyInput;\r\n            setGuessInput(updateGuessInput);\r\n        }\r\n        else {\r\n            updateGuessInput = \"\";\r\n            setGuessInput(updateGuessInput);\r\n        }\r\n    };\r\n\r\n    const handleButtonPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            submitGuess();\r\n        }\r\n        else {\r\n            //do nothing\r\n        }\r\n    };\r\n\r\n    const handleModalInput = (e, idx) => {\r\n        let updateModalInput = modalInput;\r\n        let pressedKey = e.target.value;\r\n        console.log(\"handleModalInput: \" + pressedKey)\r\n        if (pressedKey === \"Backpace\" ) {\r\n            console.log(\"Buttz\")\r\n            updateModalInput[idx] = \"\";\r\n        } else {\r\n            updateModalInput[idx] = pressedKey.toUpperCase();\r\n        }\r\n        \r\n        console.log(\"handleModalInput: \" + updateModalInput)\r\n        setModalInput(updateModalInput);\r\n    };\r\n\r\n    const handleModalKeyUp = (e, idx) => {\r\n        let inputLimit = [\" \",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\",\",\":\",\";\",\"-\",\"_\",\"=\",\"!\",\"@\",\"#\",\"$\",\"%\",\"^\",\"&\",\"*\",\"(\",\")\",\"+\",\"?\"];\r\n        let pressedKey = e.key;\r\n        let updateModalInput = modalInput;\r\n        console.log(\"Pressed Key: \" + pressedKey)\r\n        let updateModalFocus = modalFocus;\r\n        if (pressedKey===\"ArrowLeft\" && modalFocus>1) {\r\n            updateModalFocus = updateModalFocus - 1;\r\n            setModalFocus(updateModalFocus);\r\n        } else if (pressedKey===\"ArrowRight\" &&  modalFocus<6) {\r\n            updateModalFocus = updateModalFocus + 1;\r\n            setModalFocus(updateModalFocus);\r\n        } else if (pressedKey===\"Backspace\") {\r\n            updateModalInput[idx] = \"\";\r\n            setModalInput(updateModalInput);\r\n        } else if (inputLimit.includes(pressedKey) && modalFocus < 5) {\r\n            console.log(\"modalFocus: \" + (modalFocus+1))\r\n            updateModalFocus = modalFocus + 1;\r\n            setModalFocus(updateModalFocus);\r\n        } else {\r\n            // do nothing\r\n            console.log('skip doing stuff')\r\n        }\r\n    };\r\n\r\n    // pass in the keyword (as a string) and the array of guessed letters from state\r\n    // isWin returns TRUE if all the letters in the keyword are contained in  \r\n    const isWin = (keyWord, gL) => {\r\n        if (Array.from(keyWord.toLowerCase()).filter((letter) => !gL.includes(letter)).length > 0){\r\n            return(false);\r\n        }\r\n        else {\r\n            return(true);\r\n        }\r\n    };\r\n\r\n    const toggleWinState = () => {\r\n        let updateWinState = !winState;\r\n        setWinState(updateWinState);\r\n    };\r\n\r\n    const submitGuess = () => {\r\n        let updateGuessedLetters = [...guessedLetters];\r\n\r\n        // input is empty\r\n        if (guessInput === \"\") {\r\n            // no input; do nothing\r\n        }\r\n        // input has already been guessed\r\n        else if (guessedLetters.includes(guessInput.toLowerCase())) {\r\n            // this letter has already been guessed --need to handle? message?\r\n            setMessageState('repeat');\r\n        }\r\n        // otherwise\r\n        else {\r\n            updateGuessedLetters = updateGuessedLetters.concat(guessInput.toLowerCase());\r\n            setGuessedLetters(updateGuessedLetters);\r\n            // if the input is in the answer\r\n            if (Array.from(wordList[roundNum].toLowerCase()).includes(guessInput.toLowerCase())) {\r\n                //correct guess!\r\n                // if the game has been won, end the trigger the end of the round\r\n                if(isWin(wordList[roundNum], updateGuessedLetters)) {\r\n                    setWinState(true);\r\n                    setMessageState('win');\r\n                    // if this is the final round, then trigger the modal\r\n                    if (wordList.length === roundNum+1) {\r\n                        setTimeout(() => {\r\n                            setShowModal(true);\r\n                        }, 2000);\r\n                    }\r\n                }\r\n                else {\r\n                    // update the message, but do nothing further\r\n                    setMessageState('crct');\r\n                }\r\n            }\r\n            // otherwise\r\n            else {\r\n                // incorrect guess\r\n                let updateInctLetters = [...inctLetters];\r\n                updateInctLetters = updateInctLetters.concat(guessInput.toLowerCase());\r\n                setInctLetters(updateInctLetters);\r\n                setMessageState('inct');\r\n            }\r\n        }\r\n\r\n        setGuessInput(\"\");\r\n    };\r\n\r\n    const submitReset = () => {\r\n        setRoundNum(0);\r\n        setGuessInput(\"\");\r\n        setGuessedLetters([]);\r\n        setInctLetters([]);\r\n        setWinState(false);\r\n    };\r\n\r\n    const submitNextRound = () => {\r\n        let updateRoundNum = roundNum + 1;\r\n        setRoundNum(updateRoundNum);\r\n        setGuessInput(\"\");\r\n        setGuessedLetters([]);\r\n        setInctLetters([]);\r\n        setMessageState('none');\r\n        setWinState(false);\r\n    };\r\n\r\n\r\n    const handleFinish = () => {\r\n        console.log(formatDate());\r\n        // const refSection = ref(db, ('Games/LetterBox/'));\r\n        // set(refSection, {\r\n        //     data: currentTextSave\r\n        // });\r\n        setModalIsLoading(true);\r\n        let newEntry = {};\r\n        newEntry[formatDate()] = modalInput.join('');\r\n        // send data to Firebase\r\n        const refDB = ref(db, ('Games/LetterBox/' + formatDate()));\r\n        set(refDB, modalInput.join(''))\r\n        .then(()=>{\r\n            setTimeout(() => {\r\n                setModalIsLoading(false);\r\n                navigate(\"/GameLibrary\");\r\n              }, 1000)\r\n        });\r\n    };\r\n\r\n    const tempHandleModalChange = (e,idx) => {\r\n        let updateModalInput = [...modalInput];\r\n        let pressedKey = e.target.value;\r\n        console.log(\"onChange: \" + pressedKey)\r\n        updateModalInput[idx] = pressedKey.toUpperCase();\r\n        setModalInput(updateModalInput);\r\n    };\r\n\r\n    const tempHandleModalKeypress = (e, idx) => {\r\n        let updateModalFocus = idx;\r\n        console.log(\"currentIdx: \" + idx)\r\n        let pressedKey = e.key;\r\n        console.log(\"onKeypress: \" + pressedKey);\r\n        if (['Backspace'].includes(pressedKey)) {\r\n            console.log(\"Bttz\")\r\n            updateModalFocus = updateModalFocus;\r\n            console.log(\"Backspace idx: \" + updateModalFocus)\r\n            setModalFocus(updateModalFocus);\r\n        } else {\r\n            updateModalFocus = updateModalFocus + 1;\r\n            console.log(\"updateIdx: \" + updateModalFocus)\r\n            setModalFocus(updateModalFocus);\r\n        }\r\n    };\r\n\r\n    const tempHandleModalClick = (idx) => {\r\n        console.log(\"handleClick\")\r\n        let updateModalFocus = idx;\r\n        setModalFocus(idx);\r\n        document.getElementById(\"initials\" + idx).select()\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"LetterBoxContainer\">\r\n            <div className=\"RoundDisplay\">\r\n                Round Number: {roundNum + 1}\r\n            </div>\r\n            {/* <div> \r\n                <Button variant={isTabletOrMobile&&isLandscape ? \"outline-primary\" : \"primary\"} onClick={()=>setShowModal(true)}>\r\n                    Click\r\n                </Button>\r\n            </div> */}\r\n            <div className=\"GuessedLettersDisplay\">\r\n                Guessed Letters: \r\n                {guessedLetters.map((letter, idx)=>\r\n                    <span key={idx}>{\" \" + letter + \"   \"}</span>\r\n                )}\r\n            </div>\r\n            <div className=\"CentralPanel\">\r\n                <div className=\"LetterBoxMessageBoard\">\r\n                    {messageState ==='none' ?\r\n                        null\r\n                        :\r\n                        <Alert className=\"LetterBoxAlert\" variant={alertObject[messageState].color}  >\r\n                            {alertObject[messageState].msg}\r\n                        </Alert>                        \r\n                    }\r\n                </div>\r\n                <div className=\"ImageDisplay\">\r\n                    {(inctLetters.length === 0) ?\r\n                        <img src={imgStart} alt=\"ALIENS\" height=\"425\" border=\"1.5px solid black\" /> \r\n                        :\r\n                        <img src={imgNameObj[\"Round\"+inctLetters.length]} alt=\"ALIENS\" height=\"425\" border=\"1.5px solid black\" /> \r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"LetterBoxFlashcardContainer\">\r\n                    {winState ? \r\n                        <div className=\"LetterBoxFlashcard\">\r\n                            <div className=\"LetterBoxFlashcardTop\">\r\n                                <div className=\"LetterBoxFlashcardTopWords\">\r\n                                    <div className=\"LetterBoxFlashcardMainWord\">\r\n                                        <b>{wordList[roundNum]}</b>\r\n                                    </div>\r\n                                    <div className=\"LetterBoxFlashcardWordType\">\r\n                                        <i>{tempWordObj[roundNum+1].wordType}</i>\r\n                                    </div>\r\n                                    <div className=\"LetterBoxFlashcardJapaneseDef\">\r\n                                        {tempWordObj[roundNum+1].japanese}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"LetterBoxFlashcardAudio\">\r\n                                    <div className=\"LetterBoxAudioButton\">\r\n                                        {isAudio ? \r\n                                            <RxSpeakerLoud id=\"audiobutton\" />\r\n                                            :\r\n                                            <RxSpeakerOff id=\"audiobutton\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"LetterBoxFlashcardEnglishDef\">{tempWordObj[roundNum+1].english}</div>\r\n                            <div className=\"LetterBoxFlashcardExampleSentence\"><i>Ex: {tempWordObj[roundNum+1].exampleSentence}</i></div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                \r\n                </div>\r\n            </div>\r\n            <div className=\"AnswerLettersContainer\">\r\n                {Array.from(wordList[roundNum]).map((letter, idx)=>(\r\n                    guessedLetters.includes(letter.toLowerCase()) ? \r\n                        <div key={idx} style={answerLetterBoxStyle}>\r\n                            {letter}\r\n                        </div> \r\n                        :\r\n                        (letter === \" \") ?\r\n                        <div key={idx} style={spaceBoxStyle}></div> \r\n                        :\r\n                        <div key={idx} style={answerLetterBoxStyle}>\r\n                            \r\n                        </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"UserInputDash\" tabIndex=\"0\" onKeyDown={handleButtonPress}>\r\n                <div className=\"GuessInput\">\r\n                    <input ref={inputRef} type=\"text\" autoFocus value={guessInput} placeholder={guessInput} maxLength=\"1\" onChange={(e)=>handleInput(e)} style={inputBoxStyle} />\r\n                </div>\r\n                <div className=\"SubmitGuessButton\">\r\n                    {inctLetters.length === 8 ?\r\n                        <Button variant=\"outline-danger\" onClick={submitReset}>\r\n                            Start Over\r\n                        </Button>\r\n                        :\r\n                        showModal ?\r\n                            <Modal centered show={showModal} >\r\n                                <Modal.Header style={{ width: \"100%\" }}>\r\n                                    <Modal.Title style={{ width: \"100%\" }}>\r\n                                        <div className=\"LetterBoxModalTitle\">\r\n                                            <div className=\"LetterBoxModalTitleMessage\"><i>Congratulations!</i></div>\r\n                                            <div className=\"LetterBoxModalTitleSpinner\">\r\n                                                {modalIsLoading ? \r\n                                                    <Loader />\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <div style={{ fontSize: \"1.25em\", fontFamily: \"ProductSansRegular\" }}>\r\n                                        Now write each word 5 times each:\r\n                                    </div>\r\n                                    <div className=\"LetterBoxModalWordList\">\r\n                                        <ol>\r\n                                            {wordList.map((word, idx)=>\r\n                                                <li key={idx} style={{ margin: \"9px 0px\" }}>{word}</li>\r\n                                            )}\r\n                                        </ol>\r\n                                    </div>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <div className=\"LetterBoxModalFooter\">\r\n                                        <div style={{ marginRight: \"0px\", fontSize: \"0.75em\" }}>\r\n                                            <i>Clicking <b>Finished</b> will close this window and submit your data</i>\r\n                                        </div>\r\n                                        <div className=\"LetterBoxModalInputWrapper\">\r\n                                            <div className=\"LetterBoxModalInput\">\r\n                                                <Form.Control id=\"initials0\" maxLength=\"1\" value={modalInput[0]} onChange={(e)=>tempHandleModalChange(e,0)} onKeyUp={(e)=>tempHandleModalKeypress(e,0)} onClick={()=>tempHandleModalClick(0)} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials1\" maxLength=\"1\" value={modalInput[1]} onChange={(e)=>tempHandleModalChange(e,1)} onKeyUp={(e)=>tempHandleModalKeypress(e,1)} onClick={()=>tempHandleModalClick(1)} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials2\" maxLength=\"1\" value={modalInput[2]} onChange={(e)=>tempHandleModalChange(e,2)} onKeyUp={(e)=>tempHandleModalKeypress(e,2)} onClick={()=>tempHandleModalClick(2)} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials3\" maxLength=\"1\" value={modalInput[3]} onChange={(e)=>tempHandleModalChange(e,3)} onKeyUp={(e)=>tempHandleModalKeypress(e,3)} onClick={()=>tempHandleModalClick(3)} style={modalInputStyle}/>\r\n                                                {/* <Form.Control id=\"initials1\" maxLength=\"1\" value={modalInput[0]} onChange={(e)=>handleModalInput(e,0)} onKeyUp={isTabletOrMobile&&isLandscape ? (e)=>handleModalKeyUp(e,0) : null} onKeyDown={isTabletOrMobile&&isLandscape ? null : handleModalKeyUp} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials2\" maxLength=\"1\" value={modalInput[1]} onChange={(e)=>handleModalInput(e,1)} onKeyUp={isTabletOrMobile&&isLandscape ? (e)=>handleModalKeyUp(e,1) : null} onKeyDown={isTabletOrMobile&&isLandscape ? null : handleModalKeyUp} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials3\" maxLength=\"1\" value={modalInput[2]} onChange={(e)=>handleModalInput(e,2)} onKeyUp={isTabletOrMobile&&isLandscape ? (e)=>handleModalKeyUp(e,2) : null} onKeyDown={isTabletOrMobile&&isLandscape ? null : handleModalKeyUp} style={modalInputStyle}/>\r\n                                                <Form.Control id=\"initials4\" maxLength=\"1\" value={modalInput[3]} onChange={(e)=>handleModalInput(e,3)} onKeyUp={isTabletOrMobile&&isLandscape ? (e)=>handleModalKeyUp(e,3) : null} onKeyDown={isTabletOrMobile&&isLandscape ? null : handleModalKeyUp} style={modalInputStyle}/> */}\r\n                                            </div>\r\n                                            <div className=\"LetterBoxModalInputTag\">\r\n                                                <span>Type your initials</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Button id=\"initials4\" variant=\"secondary\" onClick={handleFinish}>\r\n                                            Finished\r\n                                        </Button>\r\n                                    </div>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            : \r\n                            winState ?\r\n                                <Button variant=\"outline-success\" onClick={submitNextRound}>\r\n                                    Next Round\r\n                                </Button>\r\n                                :\r\n                                <Button onClick={submitGuess} >\r\n                                    Guess\r\n                                </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {winState ?\r\n                <FlashcardConfetti />\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LetterBox;","import React, { useState, useEffect, createRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport { Modal, Form, InputGroup, Button } from 'react-bootstrap';\r\n// import { SiAudiomack } from 'react-icons/si';\r\nimport { RxSpeakerLoud, RxSpeakerOff } from 'react-icons/rx';\r\nimport { ref, set, getDatabase } from \"firebase/database\";\r\nimport app from '../../../../firebase/firebase';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport FlashcardConfetti from './FlashcardConfetti';\r\n\r\n// import TinderCard from 'react-tinder-card';\r\n\r\nimport './Flashcard.css';\r\n\r\nconst Flashcard = (props) => {\r\n\r\n    // const ref = useRef([])\r\n    // const setName = props.name;\r\n    const database = getDatabase(app);\r\n    const currentDate = new Date();\r\n    const navigate = useNavigate();\r\n    // setData should be an Object\r\n    const setData = props.cards;\r\n    const setPK = props.PK;\r\n    const setCompletions = props.completions;\r\n\r\n    // setup responsive design\r\n    const isMobile = useMediaQuery({ query: '(max-width: 950px)' });\r\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' });\r\n\r\n    // signature\r\n    const [signatureModal, setSignatureModal] = useState(false);\r\n    const [signature, setSignature] = useState(\"\");\r\n    const [modalWarning, setModalWarning] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // audio\r\n    const [audioFile, setAudioFile] = useState(''); \r\n    const [isAudio, setIsAudio] = useState(false);\r\n\r\n    // const [mouseInfo, setMouseInfo] = useState({ activeTimer: false, timeOver: false, message: \"\" });\r\n    const [cards, setCards] = useState([]);\r\n    const [toggles, setToggles] = useState([]);\r\n    const [currentIdx, setCurrentIdx] = useState(0);\r\n    const [isRemoved, setIsRemoved] = useState([]);\r\n\r\n    const [hasBeenFlipped, setHasBeenFlipped] = useState(false); \r\n    const [crctCardCount, setCrctCardCount] = useState(0);\r\n    const [inctCardCount, setInctCardCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        let cardsArray = [];\r\n        let isReversedArray = [];\r\n        let counter = 0;\r\n        let toggleState = [];\r\n        for (let i in setData) {\r\n            let tState = {\r\n                id: counter,\r\n                ref: createRef(),\r\n                isFlipped: false,\r\n                hasBeenFlipped: false\r\n            }\r\n            toggleState = toggleState.concat(tState);\r\n            isReversedArray = isReversedArray.concat(false);\r\n            cardsArray.push(setData[i])\r\n            counter = counter + 1;\r\n        }\r\n\r\n        // console.log(toggleState);\r\n        setToggles(toggleState);\r\n        // console.dir(cardsArray);\r\n        setCards(cardsArray);\r\n\r\n        // set the audio file (if we aren't finished!)\r\n        console.log(\"Card Count: \" + Object.keys(cardsArray).length)\r\n        if (currentIdx < Object.keys(cardsArray).length) {\r\n            const currentWord = cardsArray[currentIdx].Front;\r\n            try{\r\n                const currentFile = require(`../../../../assets/audio/${currentWord}.mp3`);\r\n                setAudioFile(currentFile);\r\n                setIsAudio(true);\r\n            }\r\n            catch(e) {\r\n                setAudioFile(null);\r\n                setIsAudio(false);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"UPDATE THE TIMESTAMPS!!\")\r\n\r\n\r\n        }\r\n        // else: we've finished! play the confetti!\r\n\r\n\r\n    }, [setCards, setData, setHasBeenFlipped, currentIdx])\r\n\r\n    const totalCards = cards.length;\r\n    const percentComplete = currentIdx / totalCards;\r\n\r\n    const handleFlip = (idx) => {\r\n        \r\n        toggles[idx].ref.current.toggle();\r\n        setHasBeenFlipped(true);\r\n\r\n        let newToggles = toggles;  \r\n        newToggles[idx].hasBeenFlipped = true;\r\n        setToggles(newToggles);      \r\n    }\r\n\r\n    const handleInct = (idx) => {\r\n        let updateIsRemoved = isRemoved;\r\n        updateIsRemoved = updateIsRemoved.concat(idx);\r\n        let updateCurrentIdx = currentIdx + 1;\r\n\r\n        setHasBeenFlipped(false);\r\n        setIsRemoved(updateIsRemoved);\r\n        setCurrentIdx(updateCurrentIdx);\r\n        setInctCardCount(inctCardCount+1);\r\n    }\r\n\r\n    const handleCrct = () => {\r\n        let updateIsRemoved = isRemoved.concat(currentIdx);\r\n        let updateCurrentIdx = currentIdx + 1;\r\n        \r\n        setHasBeenFlipped(false);\r\n        setIsRemoved(updateIsRemoved);\r\n        setCurrentIdx(updateCurrentIdx);\r\n        setCrctCardCount(crctCardCount+1);\r\n    }\r\n\r\n    const cardStyle = (idx) => { \r\n        return(\r\n            {\r\n                margin: \"25px 5px\", \r\n                width: \"500px\",\r\n                height: \"300px\",\r\n                position: \"absolute\",\r\n                top: \"-25px\",\r\n                left: \"-255px\",\r\n\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n\r\n                zIndex: totalCards-idx\r\n            }\r\n        )\r\n    }   \r\n\r\n    const fullBarStyle = () => {\r\n        if (isMobile && isLandscape) {\r\n            return(\r\n                {\r\n                    height: \"20px\",\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#e0e0de\",\r\n                    borderRadius: \"50\",\r\n                    margin: \"50\",\r\n                    border: \"1px solid black\"\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                {\r\n                    height: \"25px\",\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#e0e0de\",\r\n                    borderRadius: \"50\",\r\n                    margin: \"50\",\r\n                    border: \"1px solid black\"\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const percentBarStyle = () => {\r\n        if (isMobile && isLandscape) {\r\n            return(\r\n                {\r\n                    height: \"100%\",\r\n                    width: `${percentComplete*100}%`,\r\n                    backgroundColor: \"#A3E4D7\",\r\n                    borderRadius: 'inherit',\r\n                    // textAlign: 'center',\r\n                    fontSize: \"0.75em\",\r\n                    zIndex: \"0\",\r\n                    transition: 'width 1s ease-in-out',\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                {\r\n                    height: \"100%\",\r\n                    width: `${percentComplete*100}%`,\r\n                    backgroundColor: \"#A3E4D7\",\r\n                    borderRadius: 'inherit',\r\n                    // textAlign: 'center',\r\n                    fontSize: \"1em\",\r\n                    zIndex: \"0\",\r\n                    transition: 'width 1s ease-in-out',\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    //not currently using\r\n    // const toggleCard =() => {\r\n    //     console.log(\"Clicked!\")\r\n    //     setIsFront(!isFront);\r\n    //     document.getElementById(\"Card\").classList.toggle(\"flipCard\");\r\n    // }\r\n\r\n    // this function is executed when setTimeout reaches the allotted time (500ms)\r\n    // const overTime = () => {\r\n    //     setMouseInfo({\r\n    //         activeTimer: false,\r\n    //         timeOver: true,\r\n    //         message: \"More than 500ms have passed!\"\r\n    //     });\r\n    // };\r\n\r\n    // this function is what initially happens when the mouse is pressed\r\n    // const handleOnMouseDown = () => {\r\n    //     const timeoutID = setTimeout(overTime, 500);\r\n    //     setMouseInfo({\r\n    //         activeTimer: timeoutID,\r\n    //         timeOver: false,\r\n    //         message: \"Mouse is being pressed...\"\r\n    //     });\r\n    // };\r\n\r\n    // this function is what happens when the mouse is released\r\n    // const handleOnMouseUp = () => {\r\n    //     // if there is still an active timer i.e. timer hasn't triggered, then...\r\n    //     if (mouseInfo.activeTimer) {\r\n    //         clearTimeout(mouseInfo.activeTimer);\r\n    //         setMouseInfo({\r\n    //             activeTimer: false,\r\n    //             timeOver: false,\r\n    //             message: \"Mouseclick LESS THAN 500ms\"\r\n    //         });\r\n    //     // if the active timer has expired and been reset, then acknowledge that the time has been surpassed\r\n    //     } else {\r\n    //         setMouseInfo({\r\n    //             activeTimer: false,\r\n    //             timeOver: true,\r\n    //             message: \"Mouseclick MORE THAN 500ms\"\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    const playAudio = (event) => {\r\n        event.stopPropagation();\r\n        let currentAudio = new Audio(audioFile);\r\n        var playPromise = currentAudio.play();\r\n            // In browsers that don’t yet support this functionality, playPromise won’t be defined.\r\n            if (playPromise !== undefined) {\r\n                playPromise.then(function() {\r\n                    //automatic playback started\r\n                }).catch(function(error) {\r\n                    console.log(error);\r\n                    console.log(\"try to reload\");\r\n                });\r\n            }\r\n    }\r\n\r\n    const handleNoAudio = (event) => {\r\n        event.stopPropagation();\r\n        console.log(\"Do something special?\")\r\n    };\r\n\r\n    const handleBackFontSize = (s) => {\r\n        if (s.length >= 80) {\r\n            return({\r\n                fontSize: \"1.20em\",\r\n                // color: \"red\"\r\n            })\r\n        }\r\n        else if (s.length >= 55 && s.length < 80) {\r\n            return({\r\n                fontSize: \"1.5em\",\r\n                // color: \"pink\"\r\n            })\r\n        }   \r\n        else if (s.length >= 30 && s.length < 55) {\r\n            return({\r\n                fontSize: \"1.75em\",\r\n                // color: \"orange\"\r\n            })\r\n        }   \r\n        else {\r\n            return({\r\n                fontSize: \"2em\",\r\n                // color: \"green\"\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSignatureModalClose = () => {\r\n        setSignatureModal(false);\r\n    };\r\n\r\n    const handleSignatureModalOpen = () => {\r\n        setSignatureModal(true);\r\n    };\r\n\r\n    const handleSignature = (event) => {\r\n        setSignature(event.target.value)\r\n    };\r\n\r\n    const handleFinalSignature = () => {\r\n        if (signature.length > 0) {\r\n            // this will be the final object to submit to Firebase\r\n            setIsLoading(true);\r\n            var newCompletions = setCompletions;\r\n            var newTimeStamp =    \r\n                currentDate.getFullYear() + '-' +\r\n                currentDate.getMonth()    + 1 + '-' + \r\n                currentDate.getDay()      + '-' + \r\n                currentDate.getHours()    + '-' + \r\n                currentDate.getMinutes()  + '-' + \r\n                currentDate.getSeconds();\r\n            \r\n            // newTimeStamp is the key, signature is the value\r\n            newCompletions[newTimeStamp] = {\r\n                user: signature,\r\n                crct: crctCardCount,\r\n                inct: inctCardCount,\r\n            };\r\n            console.log(newCompletions);\r\n\r\n            // send data to Firebase\r\n            const refSection = ref(database, ('Flashcards/' + setPK + '/SetCompletions'));\r\n            set(refSection, newCompletions)\r\n            .then(()=>{\r\n                setIsLoading(false);\r\n                // setIsUploaded(true);\r\n                navigate(\"/FlashcardLibrary\");\r\n            });\r\n        }\r\n        else {\r\n            setModalWarning(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"FlashcardContainer\">\r\n        \r\n            <div className=\"ProgressBarContainer\">\r\n                <div className=\"ProgressVisual\">\r\n                    <div className=\"Outer\" style={fullBarStyle()} >\r\n                        <div className=\"Inner\" style={percentBarStyle()} >\r\n                            <span>{Math.ceil(percentComplete*100)}%</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ScoreboardContainer\">\r\n                <div className=\"ScoreboardText\">\r\n                    Correct\r\n                    <div className=\"CorrectScore\">\r\n                        {crctCardCount}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ScoreboardText\">\r\n                    Incorrect\r\n                    <div className=\"IncorrectScore\">\r\n                        {inctCardCount}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ScoreboardText\">\r\n                    Total\r\n                    <div className=\"TotalScore\">\r\n                        {crctCardCount + inctCardCount}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div><Button onClick={()=>{setCurrentIdx(totalCards)}}>Push</Button></div> */}\r\n        \r\n            {cards.map((card, idx)=> \r\n                {\r\n                    if (isRemoved.includes(idx)) {\r\n                        return(null);\r\n                    }\r\n                    else if (currentIdx===idx) {\r\n                        return(\r\n                            <div key={idx} style={{ position: \"relative\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                {isMobile && isLandscape ?\r\n                                    hasBeenFlipped && <Button variant=\"outline-danger\" style={{ width: \"100px\", position: \"absolute\", right: \"285px\", top: \"100px\" }} onClick={()=>handleInct(currentIdx)}>Incorrect</Button>\r\n                                :\r\n                                    null\r\n                                }\r\n                                <Flippy \r\n                                    flipOnHover={false} \r\n                                    flipOnClick={false}\r\n                                    isFlipped={toggles[idx].isFlipped}\r\n                                    flipDirection=\"horizontal\"\r\n                                    onClick={()=>handleFlip(idx)}\r\n                                    ref={toggles[idx].ref}\r\n                                    style={cardStyle(idx)}\r\n                                >\r\n                                    <FrontSide className=\"FCardFront\" id=\"FrontDiv\">\r\n                                        <div className=\"GridFiller\"></div>\r\n                                        <div className=\"GridFiller\"></div>\r\n                                        <div className=\"GridMain\">{card.Front}</div>\r\n                                        <div className=\"GridFiller\"></div>\r\n                                        <div className=\"GridFiller\"></div>\r\n                                    </FrontSide>\r\n                                    <BackSide className=\"FCardBack\">\r\n                                        <div className=\"GridTop\">\r\n                                            <div className=\"GridTopWords\">\r\n                                                <div className=\"GridOriginalWord\"><b>{card.Front}</b></div>\r\n                                                <div className=\"GridWordType\"><i>{card.WordType}</i></div>\r\n                                            </div>\r\n                                            <div className=\"GridTopAudio\"> \r\n                                                {isAudio ? \r\n                                                    <div className=\"AudioButton\" id=\"audiobutton\" onClick={(event)=>playAudio(event)}>\r\n                                                        <RxSpeakerLoud id=\"audiobutton\" />\r\n                                                    </div>\r\n                                                :\r\n                                                    <div className=\"AudioButton\" id=\"audiobutton\" onClick={(event)=>handleNoAudio(event)}>\r\n                                                        <RxSpeakerOff id=\"audiobutton\" />\r\n                                                    </div>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"GridMiddle\" id=\"BackDivNonAudio\" style={handleBackFontSize(card.Back)}>\r\n                                            {card.Back}\r\n                                        </div>\r\n                                        <div className=\"GridBottom\" id=\"BackDivNonAudio\"><i>Ex: {card.Example}</i></div>\r\n                                    </BackSide>\r\n                                </Flippy>\r\n                                {isMobile && isLandscape ?\r\n                                    hasBeenFlipped && <Button variant=\"outline-success\" style={{ width: \"100px\", position: \"absolute\", left: \"285px\", top: \"100px\" }} onClick={()=>handleCrct(currentIdx)}>Correct</Button>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return(null);\r\n                    }\r\n                }\r\n            )}\r\n\r\n            {isMobile && isLandscape ?\r\n                <div style={{ width: \"15px\", height: \"315px\" }}> \r\n                {totalCards-currentIdx===0 \r\n                        ?\r\n                        <>\r\n                            <Button variant=\"outline-secondary\" \r\n                                    size=\"lg\" \r\n                                    style={{ margin: \"100px 25px 0px -30px\"}}\r\n                                    onClick={handleSignatureModalOpen}>\r\n                                Sign\r\n                            </Button>\r\n                            <FlashcardConfetti />\r\n                        </>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            :\r\n                <div className=\"ButtonsContainer\">\r\n                    {hasBeenFlipped && <Button variant=\"outline-danger\" style={{ width: \"100px\" }} onClick={()=>handleInct(currentIdx)}>Incorrect</Button>}\r\n                    {totalCards-currentIdx===0 \r\n                        ?\r\n                        <>\r\n                            <Button variant=\"outline-secondary\" size=\"lg\" onClick={handleSignatureModalOpen}>Sign</Button>\r\n                            <FlashcardConfetti />\r\n                        </>\r\n                        :\r\n                        <Button variant=\"outline-secondary\" style={{ margin: \"0px 25px\"}}  onClick={()=>handleFlip(currentIdx)}>\r\n                            Flip\r\n                        </Button>\r\n                    }\r\n                    {hasBeenFlipped && <Button variant=\"outline-success\" style={{ width: \"100px\" }} onClick={()=>handleCrct(currentIdx)}>Correct</Button>}\r\n                </div>\r\n            }\r\n            \r\n\r\n\r\n\r\n\r\n\r\n            <>\r\n                <Modal\r\n                    show={signatureModal}\r\n                    onHide={handleSignatureModalClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Sign off on your study</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{marginBottom: \"10px\"}}>Sign your name to certify completion:</div>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control\r\n                            placeholder=\"Your Name\"\r\n                            onChange={handleSignature}\r\n                            />\r\n                        </InputGroup>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <div className=\"ModalFooter\">\r\n\r\n                            <div className=\"ModalSpinner\">\r\n                                <div className=\"spinner\">\r\n                                    {isLoading \r\n                                        ? (\r\n                                        <div className=\"ModalLoader\">\r\n                                            <div className=\"ModalInner one\"></div>\r\n                                            <div className=\"ModalInner two\"></div>\r\n                                            <div className=\"ModalInner three\"></div>\r\n                                        </div>\r\n                                        ) \r\n                                        :   null \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"NoTextWarning\">\r\n                                {modalWarning ?\r\n                                    <span><b>Please enter your name</b></span>\r\n                                :\r\n                                    <span>{null}</span>\r\n                                }\r\n                            </div>\r\n\r\n                            <Button variant=\"primary\" onClick={handleFinalSignature}>Sign</Button>\r\n                        </div>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n\r\n\r\n\r\n\r\n\r\n           {/* The following code was testing for mouse-click lengths. Maybe necessary for using TinderCard (flip vs swipe) */}\r\n            {/* <div className=\"MouseHoldTest\">\r\n                <div className=\"MousePressTest\" onMouseDown={handleOnMouseDown} onMouseUp={handleOnMouseUp}>\r\n                    Hold the Mouse Down!\r\n                </div>\r\n                <p>{mouseInfo.message}</p>\r\n            </div> */}\r\n\r\n            {/* The following code was made with TinderCard. Revive, if necessary, for Stage 2+ */}\r\n            {/* <div className=\"Card\" id=\"Card\" key={1}>\r\n                <div className=\"CardFront\" id=\"CardF\" onClick={toggleCard}>\r\n                    <h2>FRONT</h2>\r\n                </div>\r\n                <div className=\"CardBack\">\r\n                    <TinderCard className=\"pressable\" preventSwipe={\"['up', 'down']\"} onClick={toggleCard}>\r\n                        <div className=\"TCardBack\" onClick={toggleCard}>\r\n                            <h2>BACK</h2>\r\n                        </div>\r\n                    </TinderCard>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flashcard;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Flashcard from './Flashcard/Flashcard';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport './FlashcardStudySection.css';\r\n\r\nconst FlashcardStudySection = () => {\r\n    \r\n    const [isData, setIsData] = useState(false);\r\n    const [setName, setSetName] = useState(\"\");\r\n    const [setData, setSetData] = useState([]);\r\n    const [setPK, setSetPK] = useState(\"\");\r\n    const [setCompletions, setSetCompletions] = useState({});\r\n\r\n\r\n    // pull the data from React Router DOM (from flashcard click)\r\n    const location = useLocation();\r\n\r\n    // set up sizes for responsive design\r\n    const isMobile = useMediaQuery({ query: '(max-width: 950px)' });\r\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' });\r\n\r\n    useEffect(()=>{\r\n        if(!location.state) {\r\n            // console.log(\"There is no state!\")\r\n            setIsData(false);\r\n        }\r\n        else{\r\n            // console.log(\"There is state!\");\r\n            setIsData(true);\r\n            setSetName(location.state.setName);\r\n            setSetData(location.state.setCards);\r\n            setSetPK(location.state.setPK);\r\n            setSetCompletions(location.state.setCompletions);\r\n        }\r\n    }, [location.state]);\r\n\r\n    // console.log(Object.keys(setData))\r\n    // console.log(\"SetData: \" + Object.keys(setData))\r\n\r\n    return(\r\n            <div style={{ height: \"100%\", width: \"100%\"}}>\r\n            {!isData\r\n                ? \r\n                    <div className=\"NoFlashcards\">\r\n                        No Flashcards loaded. Please select a flashcard set from the <Link to=\"/FlashcardLibrary\">flashcard library</Link>\r\n                    </div>\r\n                :    \r\n                    <div className=\"FlashcardCockpit\"> \r\n                        {isMobile && isLandscape ?\r\n                            <h6 className=\"NowStudying\">Now studying: {setName}</h6>\r\n                        :\r\n                            <h3 className=\"NowStudying\">Now studying: {setName}</h3>\r\n                        }\r\n\r\n                        <Flashcard name={setName} cards={setData} PK={setPK} completions={setCompletions} />\r\n\r\n                    </div>   \r\n            }\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default FlashcardStudySection;","import React from 'react';\nimport { HashRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nimport app from './firebase/firebase';\n\n// import { AuthProvider } from './contexts/AuthContext';\nimport Header from './components/Header/Header';\nimport MobileHeader from './components/Header/MobileHeader';\nimport Home from './components/Home/Home';\nimport Homework from './components/Homework/Homework';\nimport GameLibrary from './components/Games/GameLibrary';\nimport FlashcardLibrary from './components/FlashcardLibrary/FlashcardLibrary';\nimport NoFlashcards from './components/FlashcardLibrary/FlashcardStudySection/NoFlashcards';\nimport BookReports from './components/BookReports/BookReports';\nimport TeacherLogin from './components/TeacherLogin/TeacherLogin';\nimport Teacher from './components/Teacher/Teacher';\nimport Notebook from './components/Notebook/Notebook';\n\nimport LetterBox from './components/Games/LetterBox/LetterBox';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Imports for Firebase\n// import { initializeApp } from 'firebase/app';\nimport { getDatabase } from \"firebase/database\";\nimport FlashcardStudySection from './components/FlashcardLibrary/FlashcardStudySection/FlashcardStudySection';\n\nfunction App() {\n\n  // const firebaseConfig = {\n  //   apiKey: \"AIzaSyCfDRoOUjBhtcTwdLXCCsWu7T7Obahvly8\",\n  //   authDomain: \"homework-d221e.firebaseapp.com\",\n  //   projectId: \"homework-d221e\",\n  //   storageBucket: \"homework-d221e.appspot.com\",\n  //   messagingSenderId: \"508578415933\",\n  //   appId: \"1:508578415933:web:99eb1232d4ac3f0de4f154\",\n  //   measurementId: \"G-3QMBL9Y1NX\",\n  //   databaseURL: \"https://homework-d221e-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  // };\n\n  \n  // const app = initializeApp(firebaseConfig);\n  // Get a reference to the database service\n  const database = getDatabase(app);\n  // Get the authorization tools?\n  // const auth = app.auth;\n\n\n  // const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 950px)' });\n  const isLandscape = useMediaQuery({ query: '(orientation: landscape)' });\n\n  return (\n    <div className=\"App\">\n      {/* <AuthProvider> */}\n        <HashRouter>  \n          {isMobile && !isLandscape ?\n            <>\n              <MobileHeader />\n              <div style={{ height: \"10vh\" }} />\n            </>\n          :\n            <Header />\n          }\n          \n          <Routes>\n            <Route path='/' element={<Navigate replace to='/Home' />} />\n            <Route path='/Home' element={<Home />} />\n            <Route path='/HW' element={<Homework />} />\n            <Route path=\"/GameLibrary\" element={<GameLibrary />} />\n            <Route path='/FlashcardLibrary' element={<FlashcardLibrary />} />\n            <Route path='/FlashcardStudy' element={<FlashcardStudySection />} />\n              <Route path=\":flashcardSetName\" element={<FlashcardStudySection />} />\n              <Route path=\"*\" element={<NoFlashcards />} />\n            <Route path='/BookReports'  element={<BookReports db={database} />} />\n            <Route path='/Teacher' element={<Teacher />} />\n            <Route path='/TeacherLogin' element={<TeacherLogin />} />\n            <Route path='/Notebook' element={<Notebook />} />\n            <Route path='/LetterBox' element={<LetterBox />} />\n          </Routes>\n        </HashRouter>\n      {/* </AuthProvider> */}\n    </div>  \n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './assets/fonts/Primitive.ttf';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}